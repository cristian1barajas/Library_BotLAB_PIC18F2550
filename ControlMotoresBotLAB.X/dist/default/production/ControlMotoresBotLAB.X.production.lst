

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Nov 09 15:29:16 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 2.05
    27                           ; Generated 20/12/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F2550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	smallconst
    62  000800                     __psmallconst:
    63                           	opt callstack 0
    64  000800  00                 	db	0
    65  000801  0001               	dw	1
    66  000803                     __end_of_numChannels:
    67                           	opt callstack 0
    68  000803  0000               	dw	0
    69  000805                     __end_of_myChannel:
    70                           	opt callstack 0
    71  000805  0018               	dw	24
    72  000807                     __end_of_LED:
    73                           	opt callstack 0
    74  0000                     _RCREG	set	4014
    75  0000                     _TXREG	set	4013
    76  0000                     _RCSTAbits	set	4011
    77  0000                     _TXSTAbits	set	4012
    78  0000                     _SPBRG	set	4015
    79  0000                     _PORTBbits	set	3969
    80  0000                     _PORTCbits	set	3970
    81  0000                     _PORTAbits	set	3968
    82  0000                     _TRISBbits	set	3987
    83  0000                     _TRISCbits	set	3988
    84  0000                     _TRISAbits	set	3986
    85  0000                     _ADRESL	set	4035
    86  0000                     _ADRESH	set	4036
    87  0000                     _ADCON2bits	set	4032
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON1	set	4033
    90  000807                     STR_1:
    91  000807  56                 	db	86	;'V'
    92  000808  61                 	db	97	;'a'
    93  000809  6C                 	db	108	;'l'
    94  00080A  6F                 	db	111	;'o'
    95  00080B  72                 	db	114	;'r'
    96  00080C  3A                 	db	58	;':'
    97  00080D  20                 	db	32
    98  00080E  00                 	db	0
    99                           
   100                           ; #config settings
   101  00080F  00                 	db	0	; dummy byte at the end
   102  0000                     
   103                           	psect	cinit
   104  001148                     __pcinit:
   105                           	opt callstack 0
   106  001148                     start_initialization:
   107                           	opt callstack 0
   108  001148                     __initialization:
   109                           	opt callstack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (15 bytes)
   112  001148  EE00  F019         	lfsr	0,__pbssCOMRAM
   113  00114C  0E0F               	movlw	15
   114  00114E                     clear_0:
   115  00114E  6AEE               	clrf	postinc0,c
   116  001150  06E8               	decf	wreg,f,c
   117  001152  E1FD               	bnz	clear_0
   118  001154                     end_of_initialization:
   119                           	opt callstack 0
   120  001154                     __end_of__initialization:
   121                           	opt callstack 0
   122  001154  0E00               	movlw	low (__Lmediumconst shr (0+16))
   123  001156  6EF8               	movwf	tblptru,c
   124  001158  0100               	movlb	0
   125  00115A  EFC0  F005         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128  000019                     __pbssCOMRAM:
   129                           	opt callstack 0
   130  000019                     String@buffer:
   131                           	opt callstack 0
   132  000019                     	ds	12
   133  000025                     _valueAnalog:
   134                           	opt callstack 0
   135  000025                     	ds	2
   136  000027                     _letra:
   137                           	opt callstack 0
   138  000027                     	ds	1
   139                           
   140                           	psect	cstackCOMRAM
   141  000001                     __pcstackCOMRAM:
   142                           	opt callstack 0
   143  000001                     ?_readChannel:
   144                           	opt callstack 0
   145  000001                     ?___awdiv:
   146                           	opt callstack 0
   147  000001                     ?___awmod:
   148                           	opt callstack 0
   149  000001                     ?___aldiv:
   150                           	opt callstack 0
   151  000001                     SerialPrintChar@data:
   152                           	opt callstack 0
   153  000001                     setupAnalogDigitalInput@inputs:
   154                           	opt callstack 0
   155  000001                     readChannel@channel:
   156                           	opt callstack 0
   157  000001                     pinMode@pin:
   158                           	opt callstack 0
   159  000001                     digitalWrite@pin:
   160                           	opt callstack 0
   161  000001                     ___awdiv@dividend:
   162                           	opt callstack 0
   163  000001                     ___awmod@dividend:
   164                           	opt callstack 0
   165  000001                     ___aldiv@dividend:
   166                           	opt callstack 0
   167                           
   168                           ; 4 bytes @ 0x0
   169  000001                     	ds	1
   170  000002                     SerialPrint@str:
   171                           	opt callstack 0
   172                           
   173                           ; 2 bytes @ 0x1
   174  000002                     	ds	1
   175  000003                     ??_setupAnalogDigitalInput:
   176  000003                     ??_readChannel:
   177  000003                     pinMode@direction:
   178                           	opt callstack 0
   179  000003                     digitalWrite@state:
   180                           	opt callstack 0
   181  000003                     ___awdiv@divisor:
   182                           	opt callstack 0
   183  000003                     ___awmod@divisor:
   184                           	opt callstack 0
   185                           
   186                           ; 2 bytes @ 0x2
   187  000003                     	ds	1
   188  000004                     readChannel@valueADC:
   189                           	opt callstack 0
   190                           
   191                           ; 2 bytes @ 0x3
   192  000004                     	ds	1
   193  000005                     ??_pinMode:
   194  000005                     ??_digitalWrite:
   195  000005                     ___awdiv@counter:
   196                           	opt callstack 0
   197  000005                     ___awmod@counter:
   198                           	opt callstack 0
   199  000005                     ___aldiv@divisor:
   200                           	opt callstack 0
   201                           
   202                           ; 4 bytes @ 0x4
   203  000005                     	ds	1
   204  000006                     ?_analogRead:
   205                           	opt callstack 0
   206  000006                     ___awdiv@sign:
   207                           	opt callstack 0
   208  000006                     ___awmod@sign:
   209                           	opt callstack 0
   210  000006                     analogRead@channel:
   211                           	opt callstack 0
   212                           
   213                           ; 2 bytes @ 0x5
   214  000006                     	ds	1
   215  000007                     ___awdiv@quotient:
   216                           	opt callstack 0
   217                           
   218                           ; 2 bytes @ 0x6
   219  000007                     	ds	1
   220  000008                     ??_analogRead:
   221                           
   222                           ; 1 bytes @ 0x7
   223  000008                     	ds	1
   224  000009                     ___aldiv@counter:
   225                           	opt callstack 0
   226  000009                     String@value:
   227                           	opt callstack 0
   228                           
   229                           ; 2 bytes @ 0x8
   230  000009                     	ds	1
   231  00000A                     ___aldiv@sign:
   232                           	opt callstack 0
   233  00000A                     analogRead@valueAnalog:
   234                           	opt callstack 0
   235                           
   236                           ; 2 bytes @ 0x9
   237  00000A                     	ds	1
   238  00000B                     String@original:
   239                           	opt callstack 0
   240  00000B                     ___aldiv@quotient:
   241                           	opt callstack 0
   242                           
   243                           ; 4 bytes @ 0xA
   244  00000B                     	ds	2
   245  00000D                     String@c:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0xC
   249  00000D                     	ds	2
   250  00000F                     SerialPrintln@str:
   251                           	opt callstack 0
   252  00000F                     SerialBegin@BAUD:
   253                           	opt callstack 0
   254                           
   255                           ; 4 bytes @ 0xE
   256  00000F                     	ds	2
   257  000011                     
   258                           ; 1 bytes @ 0x10
   259  000011                     	ds	2
   260  000013                     _SerialBegin$1287:
   261                           	opt callstack 0
   262                           
   263                           ; 4 bytes @ 0x12
   264  000013                     	ds	4
   265  000017                     ??_main:
   266                           
   267                           ; 1 bytes @ 0x16
   268  000017                     	ds	2
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 22 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   289 ;;      Params:         0       0       0       0       0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0       0       0       0       0
   291 ;;      Temps:          2       0       0       0       0       0       0       0       0
   292 ;;      Totals:         2       0       0       0       0       0       0       0       0
   293 ;;Total ram usage:        2 bytes
   294 ;; Hardware stack levels required when called:    2
   295 ;; This function calls:
   296 ;;		_SerialBegin
   297 ;;		_SerialPrint
   298 ;;		_SerialPrintln
   299 ;;		_String
   300 ;;		_analogRead
   301 ;;		_digitalWrite
   302 ;;		_pinMode
   303 ;;		_setupAnalogDigitalInput
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text0
   310  000B80                     __ptext0:
   311                           	opt callstack 0
   312  000B80                     _main:
   313                           	opt callstack 29
   314                           
   315                           ;main.c: 23:     SerialBegin(9600);
   316                           
   317                           ;incstack = 0
   318  000B80  0E80               	movlw	128
   319  000B82  6E0F               	movwf	SerialBegin@BAUD,c
   320  000B84  0E25               	movlw	37
   321  000B86  6E10               	movwf	SerialBegin@BAUD+1,c
   322  000B88  0E00               	movlw	0
   323  000B8A  6E11               	movwf	SerialBegin@BAUD+2,c
   324  000B8C  0E00               	movlw	0
   325  000B8E  6E12               	movwf	SerialBegin@BAUD+3,c
   326  000B90  EC21  F008         	call	_SerialBegin	;wreg free
   327                           
   328                           ;main.c: 24:     setupAnalogDigitalInput(numChannels);
   329  000B94  0E00               	movlw	0
   330  000B96  6E02               	movwf	setupAnalogDigitalInput@inputs+1,c
   331  000B98  0E01               	movlw	1
   332  000B9A  6E01               	movwf	setupAnalogDigitalInput@inputs,c
   333  000B9C  EC50  F006         	call	_setupAnalogDigitalInput	;wreg free
   334                           
   335                           ;main.c: 25:     pinMode(LED, 0);
   336  000BA0  0E00               	movlw	0
   337  000BA2  6E02               	movwf	pinMode@pin+1,c
   338  000BA4  0E18               	movlw	24
   339  000BA6  6E01               	movwf	pinMode@pin,c
   340  000BA8  0E00               	movlw	0
   341  000BAA  6E04               	movwf	pinMode@direction+1,c
   342  000BAC  0E00               	movlw	0
   343  000BAE  6E03               	movwf	pinMode@direction,c
   344  000BB0  EC08  F004         	call	_pinMode	;wreg free
   345                           
   346                           ;main.c: 26:     digitalWrite(LED, 0);
   347  000BB4  0E00               	movlw	0
   348  000BB6  6E02               	movwf	digitalWrite@pin+1,c
   349  000BB8  0E18               	movlw	24
   350  000BBA  6E01               	movwf	digitalWrite@pin,c
   351  000BBC  0E00               	movlw	0
   352  000BBE  6E04               	movwf	digitalWrite@state+1,c
   353  000BC0  0E00               	movlw	0
   354  000BC2  6E03               	movwf	digitalWrite@state,c
   355  000BC4  ECE4  F004         	call	_digitalWrite	;wreg free
   356  000BC8                     l33:
   357                           
   358                           ;main.c: 28:         valueAnalog = analogRead(myChannel);
   359  000BC8  0E00               	movlw	0
   360  000BCA  6E07               	movwf	analogRead@channel+1,c
   361  000BCC  0E00               	movlw	0
   362  000BCE  6E06               	movwf	analogRead@channel,c
   363  000BD0  ECAB  F007         	call	_analogRead	;wreg free
   364  000BD4  C006  F025         	movff	?_analogRead,_valueAnalog
   365  000BD8  C007  F026         	movff	?_analogRead+1,_valueAnalog+1
   366                           
   367                           ;main.c: 29:         SerialPrint("Valor: ");
   368  000BDC  0E07               	movlw	low STR_1
   369  000BDE  6E02               	movwf	SerialPrint@str,c
   370  000BE0  0E08               	movlw	high STR_1
   371  000BE2  6E03               	movwf	SerialPrint@str+1,c
   372  000BE4  EC8F  F008         	call	_SerialPrint	;wreg free
   373                           
   374                           ;main.c: 30:         SerialPrintln(String(valueAnalog));
   375  000BE8  C025  F009         	movff	_valueAnalog,String@value
   376  000BEC  C026  F00A         	movff	_valueAnalog+1,String@value+1
   377  000BF0  EC21  F007         	call	_String	;wreg free
   378  000BF4  6E17               	movwf	??_main& (0+255),c
   379  000BF6  6A18               	clrf	(??_main+1)& (0+255),c
   380  000BF8  C017  F00F         	movff	??_main,SerialPrintln@str
   381  000BFC  C018  F010         	movff	??_main+1,SerialPrintln@str+1
   382  000C00  EC7A  F008         	call	_SerialPrintln	;wreg free
   383                           
   384                           ;main.c: 31:         if (valueAnalog > 512) {
   385  000C04  BE26               	btfsc	_valueAnalog+1,7,c
   386  000C06  D029               	goto	l1639
   387  000C08  0425               	decf	_valueAnalog,w,c
   388  000C0A  0E02               	movlw	2
   389  000C0C  5826               	subwfb	_valueAnalog+1,w,c
   390  000C0E  A0D8               	btfss	status,0,c
   391  000C10  D024               	goto	l1639
   392                           
   393                           ;main.c: 32:             digitalWrite(LED, 1);
   394  000C12  0E00               	movlw	0
   395  000C14  6E02               	movwf	digitalWrite@pin+1,c
   396  000C16  0E18               	movlw	24
   397  000C18  6E01               	movwf	digitalWrite@pin,c
   398  000C1A  0E00               	movlw	0
   399  000C1C  6E04               	movwf	digitalWrite@state+1,c
   400  000C1E  0E01               	movlw	1
   401  000C20  6E03               	movwf	digitalWrite@state,c
   402  000C22  ECE4  F004         	call	_digitalWrite	;wreg free
   403                           
   404                           ;main.c: 33:             _delay((unsigned long)((2)*(20000000/4000.0)));
   405  000C26  0E0D               	movlw	13
   406  000C28  6E17               	movwf	??_main& (0+255),c
   407  000C2A  0EFC               	movlw	252
   408  000C2C                     u607:
   409  000C2C  2EE8               	decfsz	wreg,f,c
   410  000C2E  D7FE               	bra	u607
   411  000C30  2E17               	decfsz	??_main& (0+255),f,c
   412  000C32  D7FC               	bra	u607
   413                           
   414                           ;main.c: 34:             digitalWrite(LED, 0);
   415  000C34  0E00               	movlw	0
   416  000C36  6E02               	movwf	digitalWrite@pin+1,c
   417  000C38  0E18               	movlw	24
   418  000C3A  6E01               	movwf	digitalWrite@pin,c
   419  000C3C  0E00               	movlw	0
   420  000C3E  6E04               	movwf	digitalWrite@state+1,c
   421  000C40  0E00               	movlw	0
   422  000C42  6E03               	movwf	digitalWrite@state,c
   423  000C44  ECE4  F004         	call	_digitalWrite	;wreg free
   424                           
   425                           ;main.c: 35:             _delay((unsigned long)((7.8)*(20000000/4000.0)));
   426  000C48  0E33               	movlw	51
   427  000C4A  6E17               	movwf	??_main& (0+255),c
   428  000C4C  0EA5               	movlw	165
   429  000C4E                     u617:
   430  000C4E  2EE8               	decfsz	wreg,f,c
   431  000C50  D7FE               	bra	u617
   432  000C52  2E17               	decfsz	??_main& (0+255),f,c
   433  000C54  D7FC               	bra	u617
   434  000C56  F000               	nop	
   435                           
   436                           ;main.c: 36:         } else {
   437  000C58  D7B7               	goto	l33
   438  000C5A                     l1639:
   439                           
   440                           ;main.c: 37:             digitalWrite(LED, 1);
   441  000C5A  0E00               	movlw	0
   442  000C5C  6E02               	movwf	digitalWrite@pin+1,c
   443  000C5E  0E18               	movlw	24
   444  000C60  6E01               	movwf	digitalWrite@pin,c
   445  000C62  0E00               	movlw	0
   446  000C64  6E04               	movwf	digitalWrite@state+1,c
   447  000C66  0E01               	movlw	1
   448  000C68  6E03               	movwf	digitalWrite@state,c
   449  000C6A  ECE4  F004         	call	_digitalWrite	;wreg free
   450                           
   451                           ;main.c: 38:             _delay((unsigned long)((1.65)*(20000000/4000.0)));
   452  000C6E  0E0B               	movlw	11
   453  000C70  6E17               	movwf	??_main& (0+255),c
   454  000C72  0EB6               	movlw	182
   455  000C74                     u627:
   456  000C74  2EE8               	decfsz	wreg,f,c
   457  000C76  D7FE               	bra	u627
   458  000C78  2E17               	decfsz	??_main& (0+255),f,c
   459  000C7A  D7FC               	bra	u627
   460                           
   461                           ;main.c: 39:             digitalWrite(LED, 0);
   462  000C7C  0E00               	movlw	0
   463  000C7E  6E02               	movwf	digitalWrite@pin+1,c
   464  000C80  0E18               	movlw	24
   465  000C82  6E01               	movwf	digitalWrite@pin,c
   466  000C84  0E00               	movlw	0
   467  000C86  6E04               	movwf	digitalWrite@state+1,c
   468  000C88  0E00               	movlw	0
   469  000C8A  6E03               	movwf	digitalWrite@state,c
   470  000C8C  ECE4  F004         	call	_digitalWrite	;wreg free
   471                           
   472                           ;main.c: 40:             _delay((unsigned long)((8.2)*(20000000/4000.0)));
   473  000C90  0E36               	movlw	54
   474  000C92  6E17               	movwf	??_main& (0+255),c
   475  000C94  0E3E               	movlw	62
   476  000C96                     u637:
   477  000C96  2EE8               	decfsz	wreg,f,c
   478  000C98  D7FE               	bra	u637
   479  000C9A  2E17               	decfsz	??_main& (0+255),f,c
   480  000C9C  D7FC               	bra	u637
   481  000C9E  D794               	goto	l33
   482  000CA0                     __end_of_main:
   483                           	opt callstack 0
   484                           
   485 ;; *************** function _setupAnalogDigitalInput *****************
   486 ;; Defined at:
   487 ;;		line 13 in file "BotLAB.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  inputs          2    0[COMRAM] int 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2, status,0
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   501 ;;      Params:         2       0       0       0       0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0       0       0
   503 ;;      Temps:          2       0       0       0       0       0       0       0       0
   504 ;;      Totals:         4       0       0       0       0       0       0       0       0
   505 ;;Total ram usage:        4 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text1
   515  000CA0                     __ptext1:
   516                           	opt callstack 0
   517  000CA0                     _setupAnalogDigitalInput:
   518                           	opt callstack 30
   519                           
   520                           ;BotLAB.c: 14:     switch (inputs)
   521                           
   522                           ;incstack = 0
   523  000CA0  D030               	goto	l1495
   524  000CA2                     l1461:
   525  000CA2  0E0F               	movlw	15
   526  000CA4  6EC1               	movwf	4033,c	;volatile
   527  000CA6  0012               	return	
   528  000CA8                     l1463:
   529  000CA8  0E0E               	movlw	14
   530  000CAA  6EC1               	movwf	4033,c	;volatile
   531  000CAC  0012               	return	
   532  000CAE                     l1465:
   533  000CAE  0E0D               	movlw	13
   534  000CB0  6EC1               	movwf	4033,c	;volatile
   535  000CB2  0012               	return	
   536  000CB4                     l1467:
   537  000CB4  0E0C               	movlw	12
   538  000CB6  6EC1               	movwf	4033,c	;volatile
   539  000CB8  0012               	return	
   540  000CBA                     l1469:
   541  000CBA  0E0B               	movlw	11
   542  000CBC  6EC1               	movwf	4033,c	;volatile
   543  000CBE  0012               	return	
   544  000CC0                     l1471:
   545  000CC0  0E0A               	movlw	10
   546  000CC2  6EC1               	movwf	4033,c	;volatile
   547  000CC4  0012               	return	
   548  000CC6                     l1473:
   549  000CC6  0E09               	movlw	9
   550  000CC8  6EC1               	movwf	4033,c	;volatile
   551  000CCA  0012               	return	
   552  000CCC                     l1475:
   553  000CCC  0E08               	movlw	8
   554  000CCE  6EC1               	movwf	4033,c	;volatile
   555  000CD0  0012               	return	
   556  000CD2                     l1477:
   557  000CD2  0E07               	movlw	7
   558  000CD4  6EC1               	movwf	4033,c	;volatile
   559  000CD6  0012               	return	
   560  000CD8                     l1479:
   561  000CD8  0E06               	movlw	6
   562  000CDA  6EC1               	movwf	4033,c	;volatile
   563  000CDC  0012               	return	
   564  000CDE                     l1481:
   565  000CDE  0E05               	movlw	5
   566  000CE0  6EC1               	movwf	4033,c	;volatile
   567  000CE2  0012               	return	
   568  000CE4                     l1483:
   569  000CE4  0E04               	movlw	4
   570  000CE6  6EC1               	movwf	4033,c	;volatile
   571  000CE8  0012               	return	
   572  000CEA                     l1485:
   573  000CEA  0E03               	movlw	3
   574  000CEC  6EC1               	movwf	4033,c	;volatile
   575  000CEE  0012               	return	
   576  000CF0                     l1487:
   577  000CF0  0E02               	movlw	2
   578  000CF2  6EC1               	movwf	4033,c	;volatile
   579  000CF4  0012               	return	
   580  000CF6                     l1489:
   581  000CF6  0E01               	movlw	1
   582  000CF8  6EC1               	movwf	4033,c	;volatile
   583  000CFA  0012               	return	
   584  000CFC                     l1491:
   585  000CFC  0E00               	movlw	0
   586  000CFE  6EC1               	movwf	4033,c	;volatile
   587  000D00  0012               	return	
   588  000D02                     l1495:
   589  000D02  C001  F003         	movff	setupAnalogDigitalInput@inputs,??_setupAnalogDigitalInput
   590  000D06  C002  F004         	movff	setupAnalogDigitalInput@inputs+1,??_setupAnalogDigitalInput+1
   591                           
   592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   593                           ; Switch size 1, requested type "simple"
   594                           ; Number of cases is 1, Range of values is 0 to 0
   595                           ; switch strategies available:
   596                           ; Name         Instructions Cycles
   597                           ; simple_byte            4     3 (average)
   598                           ;	Chosen strategy is simple_byte
   599  000D0A  5004               	movf	??_setupAnalogDigitalInput+1,w,c
   600  000D0C  0A00               	xorlw	0	; case 0
   601  000D0E  A4D8               	btfss	status,2,c
   602  000D10  0012               	return	
   603                           
   604                           ; Switch size 1, requested type "simple"
   605                           ; Number of cases is 16, Range of values is 0 to 15
   606                           ; switch strategies available:
   607                           ; Name         Instructions Cycles
   608                           ; simple_byte           49    25 (average)
   609                           ;	Chosen strategy is simple_byte
   610  000D12  5003               	movf	??_setupAnalogDigitalInput,w,c
   611  000D14  0A00               	xorlw	0	; case 0
   612  000D16  B4D8               	btfsc	status,2,c
   613  000D18  D7C4               	goto	l1461
   614  000D1A  0A01               	xorlw	1	; case 1
   615  000D1C  B4D8               	btfsc	status,2,c
   616  000D1E  D7C4               	goto	l1463
   617  000D20  0A03               	xorlw	3	; case 2
   618  000D22  B4D8               	btfsc	status,2,c
   619  000D24  D7C4               	goto	l1465
   620  000D26  0A01               	xorlw	1	; case 3
   621  000D28  B4D8               	btfsc	status,2,c
   622  000D2A  D7C4               	goto	l1467
   623  000D2C  0A07               	xorlw	7	; case 4
   624  000D2E  B4D8               	btfsc	status,2,c
   625  000D30  D7C4               	goto	l1469
   626  000D32  0A01               	xorlw	1	; case 5
   627  000D34  B4D8               	btfsc	status,2,c
   628  000D36  D7C4               	goto	l1471
   629  000D38  0A03               	xorlw	3	; case 6
   630  000D3A  B4D8               	btfsc	status,2,c
   631  000D3C  D7C4               	goto	l1473
   632  000D3E  0A01               	xorlw	1	; case 7
   633  000D40  B4D8               	btfsc	status,2,c
   634  000D42  D7C4               	goto	l1475
   635  000D44  0A0F               	xorlw	15	; case 8
   636  000D46  B4D8               	btfsc	status,2,c
   637  000D48  D7C4               	goto	l1477
   638  000D4A  0A01               	xorlw	1	; case 9
   639  000D4C  B4D8               	btfsc	status,2,c
   640  000D4E  D7C4               	goto	l1479
   641  000D50  0A03               	xorlw	3	; case 10
   642  000D52  B4D8               	btfsc	status,2,c
   643  000D54  D7C4               	goto	l1481
   644  000D56  0A01               	xorlw	1	; case 11
   645  000D58  B4D8               	btfsc	status,2,c
   646  000D5A  D7C4               	goto	l1483
   647  000D5C  0A07               	xorlw	7	; case 12
   648  000D5E  B4D8               	btfsc	status,2,c
   649  000D60  D7C4               	goto	l1485
   650  000D62  0A01               	xorlw	1	; case 13
   651  000D64  B4D8               	btfsc	status,2,c
   652  000D66  D7C4               	goto	l1487
   653  000D68  0A03               	xorlw	3	; case 14
   654  000D6A  B4D8               	btfsc	status,2,c
   655  000D6C  D7C4               	goto	l1489
   656  000D6E  0A01               	xorlw	1	; case 15
   657  000D70  A4D8               	btfss	status,2,c
   658  000D72  0012               	return	
   659  000D74  D7C3               	goto	l1491
   660  000D76                     __end_of_setupAnalogDigitalInput:
   661                           	opt callstack 0
   662                           
   663 ;; *************** function _pinMode *****************
   664 ;; Defined at:
   665 ;;		line 70 in file "BotLAB.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  pin             2    0[COMRAM] int 
   668 ;;  direction       2    2[COMRAM] int 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         4       0       0       0       0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0
   682 ;;      Temps:          2       0       0       0       0       0       0       0       0
   683 ;;      Totals:         6       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        6 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text2
   694  000810                     __ptext2:
   695                           	opt callstack 0
   696  000810                     _pinMode:
   697                           	opt callstack 30
   698                           
   699                           ;BotLAB.c: 71:     if (direction == 1)
   700                           
   701                           ;incstack = 0
   702  000810  0403               	decf	pinMode@direction,w,c
   703  000812  1004               	iorwf	pinMode@direction+1,w,c
   704  000814  B4D8               	btfsc	status,2,c
   705  000816  D027               	goto	l1507
   706  000818  D069               	goto	l1509
   707  00081A                     l121:
   708  00081A  8092               	bsf	3986,0,c	;volatile
   709  00081C  0012               	return	
   710  00081E                     l123:
   711  00081E  8292               	bsf	3986,1,c	;volatile
   712  000820  0012               	return	
   713  000822                     l124:
   714  000822  8492               	bsf	3986,2,c	;volatile
   715  000824  0012               	return	
   716  000826                     l125:
   717  000826  8692               	bsf	3986,3,c	;volatile
   718  000828  0012               	return	
   719  00082A                     l126:
   720  00082A  8892               	bsf	3986,4,c	;volatile
   721  00082C  0012               	return	
   722  00082E                     l127:
   723  00082E  8A92               	bsf	3986,5,c	;volatile
   724  000830  0012               	return	
   725  000832                     l128:
   726  000832  8094               	bsf	3988,0,c	;volatile
   727  000834  0012               	return	
   728  000836                     l129:
   729  000836  8294               	bsf	3988,1,c	;volatile
   730  000838  0012               	return	
   731  00083A                     l130:
   732  00083A  8494               	bsf	3988,2,c	;volatile
   733  00083C  0012               	return	
   734  00083E                     l131:
   735  00083E  8C94               	bsf	3988,6,c	;volatile
   736  000840  0012               	return	
   737  000842                     l132:
   738  000842  8E94               	bsf	3988,7,c	;volatile
   739  000844  0012               	return	
   740  000846                     l133:
   741  000846  8093               	bsf	3987,0,c	;volatile
   742  000848  0012               	return	
   743  00084A                     l134:
   744  00084A  8293               	bsf	3987,1,c	;volatile
   745  00084C  0012               	return	
   746  00084E                     l135:
   747  00084E  8493               	bsf	3987,2,c	;volatile
   748  000850  0012               	return	
   749  000852                     l136:
   750  000852  8693               	bsf	3987,3,c	;volatile
   751  000854  0012               	return	
   752  000856                     l137:
   753  000856  8893               	bsf	3987,4,c	;volatile
   754  000858  0012               	return	
   755  00085A                     l138:
   756  00085A  8A93               	bsf	3987,5,c	;volatile
   757  00085C  0012               	return	
   758  00085E                     l139:
   759  00085E  8C93               	bsf	3987,6,c	;volatile
   760  000860  0012               	return	
   761  000862                     l140:
   762  000862  8E93               	bsf	3987,7,c	;volatile
   763  000864  0012               	return	
   764  000866                     l1507:
   765  000866  C001  F005         	movff	pinMode@pin,??_pinMode
   766  00086A  C002  F006         	movff	pinMode@pin+1,??_pinMode+1
   767                           
   768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 1, Range of values is 0 to 0
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte            4     3 (average)
   774                           ;	Chosen strategy is simple_byte
   775  00086E  5006               	movf	??_pinMode+1,w,c
   776  000870  0A00               	xorlw	0	; case 0
   777  000872  A4D8               	btfss	status,2,c
   778  000874  0012               	return	
   779                           
   780                           ; Switch size 1, requested type "simple"
   781                           ; Number of cases is 19, Range of values is 2 to 28
   782                           ; switch strategies available:
   783                           ; Name         Instructions Cycles
   784                           ; simple_byte           58    30 (average)
   785                           ;	Chosen strategy is simple_byte
   786  000876  5005               	movf	??_pinMode,w,c
   787  000878  0A02               	xorlw	2	; case 2
   788  00087A  B4D8               	btfsc	status,2,c
   789  00087C  D7CE               	goto	l121
   790  00087E  0A01               	xorlw	1	; case 3
   791  000880  B4D8               	btfsc	status,2,c
   792  000882  D7CD               	goto	l123
   793  000884  0A07               	xorlw	7	; case 4
   794  000886  B4D8               	btfsc	status,2,c
   795  000888  D7CC               	goto	l124
   796  00088A  0A01               	xorlw	1	; case 5
   797  00088C  B4D8               	btfsc	status,2,c
   798  00088E  D7CB               	goto	l125
   799  000890  0A03               	xorlw	3	; case 6
   800  000892  B4D8               	btfsc	status,2,c
   801  000894  D7CA               	goto	l126
   802  000896  0A01               	xorlw	1	; case 7
   803  000898  B4D8               	btfsc	status,2,c
   804  00089A  D7C9               	goto	l127
   805  00089C  0A0C               	xorlw	12	; case 11
   806  00089E  B4D8               	btfsc	status,2,c
   807  0008A0  D7C8               	goto	l128
   808  0008A2  0A07               	xorlw	7	; case 12
   809  0008A4  B4D8               	btfsc	status,2,c
   810  0008A6  D7C7               	goto	l129
   811  0008A8  0A01               	xorlw	1	; case 13
   812  0008AA  B4D8               	btfsc	status,2,c
   813  0008AC  D7C6               	goto	l130
   814  0008AE  0A1C               	xorlw	28	; case 17
   815  0008B0  B4D8               	btfsc	status,2,c
   816  0008B2  D7C5               	goto	l131
   817  0008B4  0A03               	xorlw	3	; case 18
   818  0008B6  B4D8               	btfsc	status,2,c
   819  0008B8  D7C4               	goto	l132
   820  0008BA  0A07               	xorlw	7	; case 21
   821  0008BC  B4D8               	btfsc	status,2,c
   822  0008BE  D7C3               	goto	l133
   823  0008C0  0A03               	xorlw	3	; case 22
   824  0008C2  B4D8               	btfsc	status,2,c
   825  0008C4  D7C2               	goto	l134
   826  0008C6  0A01               	xorlw	1	; case 23
   827  0008C8  B4D8               	btfsc	status,2,c
   828  0008CA  D7C1               	goto	l135
   829  0008CC  0A0F               	xorlw	15	; case 24
   830  0008CE  B4D8               	btfsc	status,2,c
   831  0008D0  D7C0               	goto	l136
   832  0008D2  0A01               	xorlw	1	; case 25
   833  0008D4  B4D8               	btfsc	status,2,c
   834  0008D6  D7BF               	goto	l137
   835  0008D8  0A03               	xorlw	3	; case 26
   836  0008DA  B4D8               	btfsc	status,2,c
   837  0008DC  D7BE               	goto	l138
   838  0008DE  0A01               	xorlw	1	; case 27
   839  0008E0  B4D8               	btfsc	status,2,c
   840  0008E2  D7BD               	goto	l139
   841  0008E4  0A07               	xorlw	7	; case 28
   842  0008E6  A4D8               	btfss	status,2,c
   843  0008E8  0012               	return	
   844  0008EA  D7BB               	goto	l140
   845  0008EC                     l1509:
   846  0008EC  5003               	movf	pinMode@direction,w,c
   847  0008EE  1004               	iorwf	pinMode@direction+1,w,c
   848  0008F0  A4D8               	btfss	status,2,c
   849  0008F2  0012               	return	
   850  0008F4  D026               	goto	l1515
   851  0008F6                     l144:
   852  0008F6  9092               	bcf	3986,0,c	;volatile
   853  0008F8  0012               	return	
   854  0008FA                     l146:
   855  0008FA  9292               	bcf	3986,1,c	;volatile
   856  0008FC  0012               	return	
   857  0008FE                     l147:
   858  0008FE  9492               	bcf	3986,2,c	;volatile
   859  000900  0012               	return	
   860  000902                     l148:
   861  000902  9692               	bcf	3986,3,c	;volatile
   862  000904  0012               	return	
   863  000906                     l149:
   864  000906  9892               	bcf	3986,4,c	;volatile
   865  000908  0012               	return	
   866  00090A                     l150:
   867  00090A  9A92               	bcf	3986,5,c	;volatile
   868  00090C  0012               	return	
   869  00090E                     l151:
   870  00090E  9094               	bcf	3988,0,c	;volatile
   871  000910  0012               	return	
   872  000912                     l152:
   873  000912  9294               	bcf	3988,1,c	;volatile
   874  000914  0012               	return	
   875  000916                     l153:
   876  000916  9494               	bcf	3988,2,c	;volatile
   877  000918  0012               	return	
   878  00091A                     l154:
   879  00091A  9C94               	bcf	3988,6,c	;volatile
   880  00091C  0012               	return	
   881  00091E                     l155:
   882  00091E  9E94               	bcf	3988,7,c	;volatile
   883  000920  0012               	return	
   884  000922                     l156:
   885  000922  9093               	bcf	3987,0,c	;volatile
   886  000924  0012               	return	
   887  000926                     l157:
   888  000926  9293               	bcf	3987,1,c	;volatile
   889  000928  0012               	return	
   890  00092A                     l158:
   891  00092A  9493               	bcf	3987,2,c	;volatile
   892  00092C  0012               	return	
   893  00092E                     l159:
   894  00092E  9693               	bcf	3987,3,c	;volatile
   895  000930  0012               	return	
   896  000932                     l160:
   897  000932  9893               	bcf	3987,4,c	;volatile
   898  000934  0012               	return	
   899  000936                     l161:
   900  000936  9A93               	bcf	3987,5,c	;volatile
   901  000938  0012               	return	
   902  00093A                     l162:
   903  00093A  9C93               	bcf	3987,6,c	;volatile
   904  00093C  0012               	return	
   905  00093E                     l163:
   906  00093E  9E93               	bcf	3987,7,c	;volatile
   907  000940  0012               	return	
   908  000942                     l1515:
   909  000942  C001  F005         	movff	pinMode@pin,??_pinMode
   910  000946  C002  F006         	movff	pinMode@pin+1,??_pinMode+1
   911                           
   912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   913                           ; Switch size 1, requested type "simple"
   914                           ; Number of cases is 1, Range of values is 0 to 0
   915                           ; switch strategies available:
   916                           ; Name         Instructions Cycles
   917                           ; simple_byte            4     3 (average)
   918                           ;	Chosen strategy is simple_byte
   919  00094A  5006               	movf	??_pinMode+1,w,c
   920  00094C  0A00               	xorlw	0	; case 0
   921  00094E  A4D8               	btfss	status,2,c
   922  000950  0012               	return	
   923                           
   924                           ; Switch size 1, requested type "simple"
   925                           ; Number of cases is 19, Range of values is 2 to 28
   926                           ; switch strategies available:
   927                           ; Name         Instructions Cycles
   928                           ; simple_byte           58    30 (average)
   929                           ;	Chosen strategy is simple_byte
   930  000952  5005               	movf	??_pinMode,w,c
   931  000954  0A02               	xorlw	2	; case 2
   932  000956  B4D8               	btfsc	status,2,c
   933  000958  D7CE               	goto	l144
   934  00095A  0A01               	xorlw	1	; case 3
   935  00095C  B4D8               	btfsc	status,2,c
   936  00095E  D7CD               	goto	l146
   937  000960  0A07               	xorlw	7	; case 4
   938  000962  B4D8               	btfsc	status,2,c
   939  000964  D7CC               	goto	l147
   940  000966  0A01               	xorlw	1	; case 5
   941  000968  B4D8               	btfsc	status,2,c
   942  00096A  D7CB               	goto	l148
   943  00096C  0A03               	xorlw	3	; case 6
   944  00096E  B4D8               	btfsc	status,2,c
   945  000970  D7CA               	goto	l149
   946  000972  0A01               	xorlw	1	; case 7
   947  000974  B4D8               	btfsc	status,2,c
   948  000976  D7C9               	goto	l150
   949  000978  0A0C               	xorlw	12	; case 11
   950  00097A  B4D8               	btfsc	status,2,c
   951  00097C  D7C8               	goto	l151
   952  00097E  0A07               	xorlw	7	; case 12
   953  000980  B4D8               	btfsc	status,2,c
   954  000982  D7C7               	goto	l152
   955  000984  0A01               	xorlw	1	; case 13
   956  000986  B4D8               	btfsc	status,2,c
   957  000988  D7C6               	goto	l153
   958  00098A  0A1C               	xorlw	28	; case 17
   959  00098C  B4D8               	btfsc	status,2,c
   960  00098E  D7C5               	goto	l154
   961  000990  0A03               	xorlw	3	; case 18
   962  000992  B4D8               	btfsc	status,2,c
   963  000994  D7C4               	goto	l155
   964  000996  0A07               	xorlw	7	; case 21
   965  000998  B4D8               	btfsc	status,2,c
   966  00099A  D7C3               	goto	l156
   967  00099C  0A03               	xorlw	3	; case 22
   968  00099E  B4D8               	btfsc	status,2,c
   969  0009A0  D7C2               	goto	l157
   970  0009A2  0A01               	xorlw	1	; case 23
   971  0009A4  B4D8               	btfsc	status,2,c
   972  0009A6  D7C1               	goto	l158
   973  0009A8  0A0F               	xorlw	15	; case 24
   974  0009AA  B4D8               	btfsc	status,2,c
   975  0009AC  D7C0               	goto	l159
   976  0009AE  0A01               	xorlw	1	; case 25
   977  0009B0  B4D8               	btfsc	status,2,c
   978  0009B2  D7BF               	goto	l160
   979  0009B4  0A03               	xorlw	3	; case 26
   980  0009B6  B4D8               	btfsc	status,2,c
   981  0009B8  D7BE               	goto	l161
   982  0009BA  0A01               	xorlw	1	; case 27
   983  0009BC  B4D8               	btfsc	status,2,c
   984  0009BE  D7BD               	goto	l162
   985  0009C0  0A07               	xorlw	7	; case 28
   986  0009C2  A4D8               	btfss	status,2,c
   987  0009C4  0012               	return	
   988  0009C6  D7BB               	goto	l163
   989  0009C8                     __end_of_pinMode:
   990                           	opt callstack 0
   991                           
   992 ;; *************** function _digitalWrite *****************
   993 ;; Defined at:
   994 ;;		line 122 in file "BotLAB.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  pin             2    0[COMRAM] int 
   997 ;;  state           2    2[COMRAM] int 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1009 ;;      Params:         4       0       0       0       0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1011 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1012 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1013 ;;Total ram usage:        6 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text3
  1023  0009C8                     __ptext3:
  1024                           	opt callstack 0
  1025  0009C8                     _digitalWrite:
  1026                           	opt callstack 30
  1027                           
  1028                           ;BotLAB.c: 123:     if (state == 1)
  1029                           
  1030                           ;incstack = 0
  1031  0009C8  0403               	decf	digitalWrite@state,w,c
  1032  0009CA  1004               	iorwf	digitalWrite@state+1,w,c
  1033  0009CC  B4D8               	btfsc	status,2,c
  1034  0009CE  D027               	goto	l1531
  1035  0009D0  D069               	goto	l1533
  1036  0009D2                     l169:
  1037  0009D2  8280               	bsf	3968,1,c	;volatile
  1038  0009D4  0012               	return	
  1039  0009D6                     l171:
  1040  0009D6  8480               	bsf	3968,2,c	;volatile
  1041  0009D8  0012               	return	
  1042  0009DA                     l172:
  1043  0009DA  8080               	bsf	3968,0,c	;volatile
  1044  0009DC  0012               	return	
  1045  0009DE                     l173:
  1046  0009DE  8680               	bsf	3968,3,c	;volatile
  1047  0009E0  0012               	return	
  1048  0009E2                     l174:
  1049  0009E2  8880               	bsf	3968,4,c	;volatile
  1050  0009E4  0012               	return	
  1051  0009E6                     l175:
  1052  0009E6  8A80               	bsf	3968,5,c	;volatile
  1053  0009E8  0012               	return	
  1054  0009EA                     l176:
  1055  0009EA  8082               	bsf	3970,0,c	;volatile
  1056  0009EC  0012               	return	
  1057  0009EE                     l177:
  1058  0009EE  8282               	bsf	3970,1,c	;volatile
  1059  0009F0  0012               	return	
  1060  0009F2                     l178:
  1061  0009F2  8482               	bsf	3970,2,c	;volatile
  1062  0009F4  0012               	return	
  1063  0009F6                     l179:
  1064  0009F6  8C82               	bsf	3970,6,c	;volatile
  1065  0009F8  0012               	return	
  1066  0009FA                     l180:
  1067  0009FA  8E82               	bsf	3970,7,c	;volatile
  1068  0009FC  0012               	return	
  1069  0009FE                     l181:
  1070  0009FE  8081               	bsf	3969,0,c	;volatile
  1071  000A00  0012               	return	
  1072  000A02                     l182:
  1073  000A02  8281               	bsf	3969,1,c	;volatile
  1074  000A04  0012               	return	
  1075  000A06                     l183:
  1076  000A06  8481               	bsf	3969,2,c	;volatile
  1077  000A08  0012               	return	
  1078  000A0A                     l184:
  1079  000A0A  8681               	bsf	3969,3,c	;volatile
  1080  000A0C  0012               	return	
  1081  000A0E                     l185:
  1082  000A0E  8881               	bsf	3969,4,c	;volatile
  1083  000A10  0012               	return	
  1084  000A12                     l186:
  1085  000A12  8A81               	bsf	3969,5,c	;volatile
  1086  000A14  0012               	return	
  1087  000A16                     l187:
  1088  000A16  8C81               	bsf	3969,6,c	;volatile
  1089  000A18  0012               	return	
  1090  000A1A                     l188:
  1091  000A1A  8E81               	bsf	3969,7,c	;volatile
  1092  000A1C  0012               	return	
  1093  000A1E                     l1531:
  1094  000A1E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1095  000A22  C002  F006         	movff	digitalWrite@pin+1,??_digitalWrite+1
  1096                           
  1097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 1, Range of values is 0 to 0
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            4     3 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104  000A26  5006               	movf	??_digitalWrite+1,w,c
  1105  000A28  0A00               	xorlw	0	; case 0
  1106  000A2A  A4D8               	btfss	status,2,c
  1107  000A2C  0012               	return	
  1108                           
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 19, Range of values is 2 to 28
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte           58    30 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  000A2E  5005               	movf	??_digitalWrite,w,c
  1116  000A30  0A02               	xorlw	2	; case 2
  1117  000A32  B4D8               	btfsc	status,2,c
  1118  000A34  D7D2               	goto	l172
  1119  000A36  0A01               	xorlw	1	; case 3
  1120  000A38  B4D8               	btfsc	status,2,c
  1121  000A3A  D7CB               	goto	l169
  1122  000A3C  0A07               	xorlw	7	; case 4
  1123  000A3E  B4D8               	btfsc	status,2,c
  1124  000A40  D7CA               	goto	l171
  1125  000A42  0A01               	xorlw	1	; case 5
  1126  000A44  B4D8               	btfsc	status,2,c
  1127  000A46  D7CB               	goto	l173
  1128  000A48  0A03               	xorlw	3	; case 6
  1129  000A4A  B4D8               	btfsc	status,2,c
  1130  000A4C  D7CA               	goto	l174
  1131  000A4E  0A01               	xorlw	1	; case 7
  1132  000A50  B4D8               	btfsc	status,2,c
  1133  000A52  D7C9               	goto	l175
  1134  000A54  0A0C               	xorlw	12	; case 11
  1135  000A56  B4D8               	btfsc	status,2,c
  1136  000A58  D7C8               	goto	l176
  1137  000A5A  0A07               	xorlw	7	; case 12
  1138  000A5C  B4D8               	btfsc	status,2,c
  1139  000A5E  D7C7               	goto	l177
  1140  000A60  0A01               	xorlw	1	; case 13
  1141  000A62  B4D8               	btfsc	status,2,c
  1142  000A64  D7C6               	goto	l178
  1143  000A66  0A1C               	xorlw	28	; case 17
  1144  000A68  B4D8               	btfsc	status,2,c
  1145  000A6A  D7C5               	goto	l179
  1146  000A6C  0A03               	xorlw	3	; case 18
  1147  000A6E  B4D8               	btfsc	status,2,c
  1148  000A70  D7C4               	goto	l180
  1149  000A72  0A07               	xorlw	7	; case 21
  1150  000A74  B4D8               	btfsc	status,2,c
  1151  000A76  D7C3               	goto	l181
  1152  000A78  0A03               	xorlw	3	; case 22
  1153  000A7A  B4D8               	btfsc	status,2,c
  1154  000A7C  D7C2               	goto	l182
  1155  000A7E  0A01               	xorlw	1	; case 23
  1156  000A80  B4D8               	btfsc	status,2,c
  1157  000A82  D7C1               	goto	l183
  1158  000A84  0A0F               	xorlw	15	; case 24
  1159  000A86  B4D8               	btfsc	status,2,c
  1160  000A88  D7C0               	goto	l184
  1161  000A8A  0A01               	xorlw	1	; case 25
  1162  000A8C  B4D8               	btfsc	status,2,c
  1163  000A8E  D7BF               	goto	l185
  1164  000A90  0A03               	xorlw	3	; case 26
  1165  000A92  B4D8               	btfsc	status,2,c
  1166  000A94  D7BE               	goto	l186
  1167  000A96  0A01               	xorlw	1	; case 27
  1168  000A98  B4D8               	btfsc	status,2,c
  1169  000A9A  D7BD               	goto	l187
  1170  000A9C  0A07               	xorlw	7	; case 28
  1171  000A9E  A4D8               	btfss	status,2,c
  1172  000AA0  0012               	return	
  1173  000AA2  D7BB               	goto	l188
  1174  000AA4                     l1533:
  1175  000AA4  5003               	movf	digitalWrite@state,w,c
  1176  000AA6  1004               	iorwf	digitalWrite@state+1,w,c
  1177  000AA8  A4D8               	btfss	status,2,c
  1178  000AAA  0012               	return	
  1179  000AAC  D026               	goto	l1539
  1180  000AAE                     l192:
  1181  000AAE  9080               	bcf	3968,0,c	;volatile
  1182  000AB0  0012               	return	
  1183  000AB2                     l194:
  1184  000AB2  9280               	bcf	3968,1,c	;volatile
  1185  000AB4  0012               	return	
  1186  000AB6                     l195:
  1187  000AB6  9480               	bcf	3968,2,c	;volatile
  1188  000AB8  0012               	return	
  1189  000ABA                     l196:
  1190  000ABA  9680               	bcf	3968,3,c	;volatile
  1191  000ABC  0012               	return	
  1192  000ABE                     l197:
  1193  000ABE  9880               	bcf	3968,4,c	;volatile
  1194  000AC0  0012               	return	
  1195  000AC2                     l198:
  1196  000AC2  9A80               	bcf	3968,5,c	;volatile
  1197  000AC4  0012               	return	
  1198  000AC6                     l199:
  1199  000AC6  9082               	bcf	3970,0,c	;volatile
  1200  000AC8  0012               	return	
  1201  000ACA                     l200:
  1202  000ACA  9282               	bcf	3970,1,c	;volatile
  1203  000ACC  0012               	return	
  1204  000ACE                     l201:
  1205  000ACE  9482               	bcf	3970,2,c	;volatile
  1206  000AD0  0012               	return	
  1207  000AD2                     l202:
  1208  000AD2  9C82               	bcf	3970,6,c	;volatile
  1209  000AD4  0012               	return	
  1210  000AD6                     l203:
  1211  000AD6  9E82               	bcf	3970,7,c	;volatile
  1212  000AD8  0012               	return	
  1213  000ADA                     l204:
  1214  000ADA  9081               	bcf	3969,0,c	;volatile
  1215  000ADC  0012               	return	
  1216  000ADE                     l205:
  1217  000ADE  9281               	bcf	3969,1,c	;volatile
  1218  000AE0  0012               	return	
  1219  000AE2                     l206:
  1220  000AE2  9481               	bcf	3969,2,c	;volatile
  1221  000AE4  0012               	return	
  1222  000AE6                     l207:
  1223  000AE6  9681               	bcf	3969,3,c	;volatile
  1224  000AE8  0012               	return	
  1225  000AEA                     l208:
  1226  000AEA  9881               	bcf	3969,4,c	;volatile
  1227  000AEC  0012               	return	
  1228  000AEE                     l209:
  1229  000AEE  9A81               	bcf	3969,5,c	;volatile
  1230  000AF0  0012               	return	
  1231  000AF2                     l210:
  1232  000AF2  9C81               	bcf	3969,6,c	;volatile
  1233  000AF4  0012               	return	
  1234  000AF6                     l211:
  1235  000AF6  9E81               	bcf	3969,7,c	;volatile
  1236  000AF8  0012               	return	
  1237  000AFA                     l1539:
  1238  000AFA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1239  000AFE  C002  F006         	movff	digitalWrite@pin+1,??_digitalWrite+1
  1240                           
  1241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 1, Range of values is 0 to 0
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte            4     3 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248  000B02  5006               	movf	??_digitalWrite+1,w,c
  1249  000B04  0A00               	xorlw	0	; case 0
  1250  000B06  A4D8               	btfss	status,2,c
  1251  000B08  0012               	return	
  1252                           
  1253                           ; Switch size 1, requested type "simple"
  1254                           ; Number of cases is 19, Range of values is 2 to 28
  1255                           ; switch strategies available:
  1256                           ; Name         Instructions Cycles
  1257                           ; simple_byte           58    30 (average)
  1258                           ;	Chosen strategy is simple_byte
  1259  000B0A  5005               	movf	??_digitalWrite,w,c
  1260  000B0C  0A02               	xorlw	2	; case 2
  1261  000B0E  B4D8               	btfsc	status,2,c
  1262  000B10  D7CE               	goto	l192
  1263  000B12  0A01               	xorlw	1	; case 3
  1264  000B14  B4D8               	btfsc	status,2,c
  1265  000B16  D7CD               	goto	l194
  1266  000B18  0A07               	xorlw	7	; case 4
  1267  000B1A  B4D8               	btfsc	status,2,c
  1268  000B1C  D7CC               	goto	l195
  1269  000B1E  0A01               	xorlw	1	; case 5
  1270  000B20  B4D8               	btfsc	status,2,c
  1271  000B22  D7CB               	goto	l196
  1272  000B24  0A03               	xorlw	3	; case 6
  1273  000B26  B4D8               	btfsc	status,2,c
  1274  000B28  D7CA               	goto	l197
  1275  000B2A  0A01               	xorlw	1	; case 7
  1276  000B2C  B4D8               	btfsc	status,2,c
  1277  000B2E  D7C9               	goto	l198
  1278  000B30  0A0C               	xorlw	12	; case 11
  1279  000B32  B4D8               	btfsc	status,2,c
  1280  000B34  D7C8               	goto	l199
  1281  000B36  0A07               	xorlw	7	; case 12
  1282  000B38  B4D8               	btfsc	status,2,c
  1283  000B3A  D7C7               	goto	l200
  1284  000B3C  0A01               	xorlw	1	; case 13
  1285  000B3E  B4D8               	btfsc	status,2,c
  1286  000B40  D7C6               	goto	l201
  1287  000B42  0A1C               	xorlw	28	; case 17
  1288  000B44  B4D8               	btfsc	status,2,c
  1289  000B46  D7C5               	goto	l202
  1290  000B48  0A03               	xorlw	3	; case 18
  1291  000B4A  B4D8               	btfsc	status,2,c
  1292  000B4C  D7C4               	goto	l203
  1293  000B4E  0A07               	xorlw	7	; case 21
  1294  000B50  B4D8               	btfsc	status,2,c
  1295  000B52  D7C3               	goto	l204
  1296  000B54  0A03               	xorlw	3	; case 22
  1297  000B56  B4D8               	btfsc	status,2,c
  1298  000B58  D7C2               	goto	l205
  1299  000B5A  0A01               	xorlw	1	; case 23
  1300  000B5C  B4D8               	btfsc	status,2,c
  1301  000B5E  D7C1               	goto	l206
  1302  000B60  0A0F               	xorlw	15	; case 24
  1303  000B62  B4D8               	btfsc	status,2,c
  1304  000B64  D7C0               	goto	l207
  1305  000B66  0A01               	xorlw	1	; case 25
  1306  000B68  B4D8               	btfsc	status,2,c
  1307  000B6A  D7BF               	goto	l208
  1308  000B6C  0A03               	xorlw	3	; case 26
  1309  000B6E  B4D8               	btfsc	status,2,c
  1310  000B70  D7BE               	goto	l209
  1311  000B72  0A01               	xorlw	1	; case 27
  1312  000B74  B4D8               	btfsc	status,2,c
  1313  000B76  D7BD               	goto	l210
  1314  000B78  0A07               	xorlw	7	; case 28
  1315  000B7A  A4D8               	btfss	status,2,c
  1316  000B7C  0012               	return	
  1317  000B7E  D7BB               	goto	l211
  1318  000B80                     __end_of_digitalWrite:
  1319                           	opt callstack 0
  1320                           
  1321 ;; *************** function _analogRead *****************
  1322 ;; Defined at:
  1323 ;;		line 35 in file "BotLAB.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  channel         2    5[COMRAM] int 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  valueAnalog     2    9[COMRAM] int 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  2    5[COMRAM] int 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         2       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1339 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        6 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    1
  1344 ;; This function calls:
  1345 ;;		_readChannel
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text4
  1352  000F56                     __ptext4:
  1353                           	opt callstack 0
  1354  000F56                     _analogRead:
  1355                           	opt callstack 29
  1356                           
  1357                           ;BotLAB.c: 36:     int valueAnalog;;BotLAB.c: 37:     switch (channel)
  1358                           
  1359                           ;incstack = 0
  1360  000F56  D00B               	goto	l1577
  1361  000F58                     l1551:
  1362  000F58  C006  F001         	movff	analogRead@channel,readChannel@channel
  1363  000F5C  C007  F002         	movff	analogRead@channel+1,readChannel@channel+1
  1364  000F60  EC59  F008         	call	_readChannel	;wreg free
  1365  000F64  C001  F00A         	movff	?_readChannel,analogRead@valueAnalog
  1366  000F68  C002  F00B         	movff	?_readChannel+1,analogRead@valueAnalog+1
  1367  000F6C  D02D               	goto	l98
  1368  000F6E                     l1577:
  1369  000F6E  C006  F008         	movff	analogRead@channel,??_analogRead
  1370  000F72  C007  F009         	movff	analogRead@channel+1,??_analogRead+1
  1371                           
  1372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1373                           ; Switch size 1, requested type "simple"
  1374                           ; Number of cases is 1, Range of values is 0 to 0
  1375                           ; switch strategies available:
  1376                           ; Name         Instructions Cycles
  1377                           ; simple_byte            4     3 (average)
  1378                           ;	Chosen strategy is simple_byte
  1379  000F76  5009               	movf	??_analogRead+1,w,c
  1380  000F78  0A00               	xorlw	0	; case 0
  1381  000F7A  A4D8               	btfss	status,2,c
  1382  000F7C  D025               	goto	l98
  1383                           
  1384                           ; Switch size 1, requested type "simple"
  1385                           ; Number of cases is 12, Range of values is 0 to 12
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte           37    19 (average)
  1389                           ;	Chosen strategy is simple_byte
  1390  000F7E  5008               	movf	??_analogRead,w,c
  1391  000F80  0A00               	xorlw	0	; case 0
  1392  000F82  B4D8               	btfsc	status,2,c
  1393  000F84  D7E9               	goto	l1551
  1394  000F86  0A01               	xorlw	1	; case 1
  1395  000F88  B4D8               	btfsc	status,2,c
  1396  000F8A  D7E6               	goto	l1551
  1397  000F8C  0A03               	xorlw	3	; case 2
  1398  000F8E  B4D8               	btfsc	status,2,c
  1399  000F90  D7E3               	goto	l1551
  1400  000F92  0A06               	xorlw	6	; case 4
  1401  000F94  B4D8               	btfsc	status,2,c
  1402  000F96  D7E0               	goto	l1551
  1403  000F98  0A01               	xorlw	1	; case 5
  1404  000F9A  B4D8               	btfsc	status,2,c
  1405  000F9C  D7DD               	goto	l1551
  1406  000F9E  0A03               	xorlw	3	; case 6
  1407  000FA0  B4D8               	btfsc	status,2,c
  1408  000FA2  D7DA               	goto	l1551
  1409  000FA4  0A01               	xorlw	1	; case 7
  1410  000FA6  B4D8               	btfsc	status,2,c
  1411  000FA8  D7D7               	goto	l1551
  1412  000FAA  0A0F               	xorlw	15	; case 8
  1413  000FAC  B4D8               	btfsc	status,2,c
  1414  000FAE  D7D4               	goto	l1551
  1415  000FB0  0A01               	xorlw	1	; case 9
  1416  000FB2  B4D8               	btfsc	status,2,c
  1417  000FB4  D7D1               	goto	l1551
  1418  000FB6  0A03               	xorlw	3	; case 10
  1419  000FB8  B4D8               	btfsc	status,2,c
  1420  000FBA  D7CE               	goto	l1551
  1421  000FBC  0A01               	xorlw	1	; case 11
  1422  000FBE  B4D8               	btfsc	status,2,c
  1423  000FC0  D7CB               	goto	l1551
  1424  000FC2  0A07               	xorlw	7	; case 12
  1425  000FC4  B4D8               	btfsc	status,2,c
  1426  000FC6  D7C8               	goto	l1551
  1427  000FC8                     l98:
  1428                           
  1429                           ;BotLAB.c: 52:     return valueAnalog;
  1430  000FC8  C00A  F006         	movff	analogRead@valueAnalog,?_analogRead
  1431  000FCC  C00B  F007         	movff	analogRead@valueAnalog+1,?_analogRead+1
  1432  000FD0  0012               	return		;funcret
  1433  000FD2                     __end_of_analogRead:
  1434                           	opt callstack 0
  1435                           
  1436 ;; *************** function _readChannel *****************
  1437 ;; Defined at:
  1438 ;;		line 55 in file "BotLAB.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  channel         2    0[COMRAM] int 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  valueADC        2    3[COMRAM] int 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  2    0[COMRAM] int 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1452 ;;      Params:         2       0       0       0       0       0       0       0       0
  1453 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1454 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1455 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1456 ;;Total ram usage:        5 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_analogRead
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text5
  1466  0010B2                     __ptext5:
  1467                           	opt callstack 0
  1468  0010B2                     _readChannel:
  1469                           	opt callstack 29
  1470                           
  1471                           ;BotLAB.c: 56:     int valueADC;;BotLAB.c: 57:     ADCON0bits.CHS = channel;
  1472                           
  1473                           ;incstack = 0
  1474  0010B2  C001  F003         	movff	readChannel@channel,??_readChannel
  1475  0010B6  4603               	rlncf	??_readChannel,f,c
  1476  0010B8  4603               	rlncf	??_readChannel,f,c
  1477  0010BA  50C2               	movf	4034,w,c	;volatile
  1478  0010BC  1803               	xorwf	??_readChannel,w,c
  1479  0010BE  0BC3               	andlw	-61
  1480  0010C0  1803               	xorwf	??_readChannel,w,c
  1481  0010C2  6EC2               	movwf	4034,c	;volatile
  1482                           
  1483                           ;BotLAB.c: 58:     ADCON2bits.ADCS = 0b000;
  1484  0010C4  0EF8               	movlw	-8
  1485  0010C6  16C0               	andwf	4032,f,c	;volatile
  1486                           
  1487                           ;BotLAB.c: 59:     ADCON2bits.ADFM = 1;
  1488  0010C8  8EC0               	bsf	4032,7,c	;volatile
  1489                           
  1490                           ;BotLAB.c: 60:     ADCON0bits.ADON = 1;
  1491  0010CA  80C2               	bsf	4034,0,c	;volatile
  1492                           
  1493                           ;BotLAB.c: 61:     ADCON0bits.GO_nDONE = 1;
  1494  0010CC  82C2               	bsf	4034,1,c	;volatile
  1495  0010CE                     l113:
  1496                           
  1497                           ;BotLAB.c: 62:         while(ADCON0bits.GO_nDONE)
  1498  0010CE  B2C2               	btfsc	4034,1,c	;volatile
  1499  0010D0  D7FE               	goto	l113
  1500                           
  1501                           ;BotLAB.c: 64:             valueADC = ADRESH;
  1502  0010D2  CFC4 F004          	movff	4036,readChannel@valueADC	;volatile
  1503  0010D6  6A05               	clrf	readChannel@valueADC+1,c
  1504                           
  1505                           ;BotLAB.c: 65:             valueADC = valueADC << 8;
  1506  0010D8  5004               	movf	readChannel@valueADC,w,c
  1507  0010DA  6E05               	movwf	readChannel@valueADC+1,c
  1508  0010DC  6A04               	clrf	readChannel@valueADC,c
  1509                           
  1510                           ;BotLAB.c: 66:             valueADC = valueADC + ADRESL;
  1511  0010DE  50C3               	movf	4035,w,c	;volatile
  1512  0010E0  2404               	addwf	readChannel@valueADC,w,c
  1513  0010E2  6E04               	movwf	readChannel@valueADC,c
  1514  0010E4  0E00               	movlw	0
  1515  0010E6  2005               	addwfc	readChannel@valueADC+1,w,c
  1516  0010E8  6E05               	movwf	readChannel@valueADC+1,c
  1517                           
  1518                           ;BotLAB.c: 67:     return valueADC;
  1519  0010EA  C004  F001         	movff	readChannel@valueADC,?_readChannel
  1520  0010EE  C005  F002         	movff	readChannel@valueADC+1,?_readChannel+1
  1521  0010F2  0012               	return		;funcret
  1522  0010F4                     __end_of_readChannel:
  1523                           	opt callstack 0
  1524                           
  1525 ;; *************** function _String *****************
  1526 ;; Defined at:
  1527 ;;		line 222 in file "BotLAB.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  value           2    8[COMRAM] int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  c               2   12[COMRAM] int 
  1532 ;;  original        2   10[COMRAM] int 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      unsigned char 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1542 ;;      Params:         2       0       0       0       0       0       0       0       0
  1543 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1545 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1546 ;;Total ram usage:        6 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    1
  1549 ;; This function calls:
  1550 ;;		___awdiv
  1551 ;;		___awmod
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  000E42                     __ptext6:
  1559                           	opt callstack 0
  1560  000E42                     _String:
  1561                           	opt callstack 29
  1562                           
  1563                           ;BotLAB.c: 222:  char String(int value);BotLAB.c: 223:  {;BotLAB.c: 224:      static cha
      +                          r buffer[12];;BotLAB.c: 225:      int original = value;
  1564                           
  1565                           ;incstack = 0
  1566  000E42  C009  F00B         	movff	String@value,String@original
  1567  000E46  C00A  F00C         	movff	String@value+1,String@original+1
  1568                           
  1569                           ;BotLAB.c: 227:      int c = sizeof(buffer)-1;
  1570  000E4A  0E00               	movlw	0
  1571  000E4C  6E0E               	movwf	String@c+1,c
  1572  000E4E  0E0B               	movlw	11
  1573  000E50  6E0D               	movwf	String@c,c
  1574                           
  1575                           ;BotLAB.c: 229:      buffer[c] = 0;
  1576  000E52  0E00               	movlw	0
  1577  000E54  6E24               	movwf	String@buffer+11,c
  1578                           
  1579                           ;BotLAB.c: 231:      if (value < 0)
  1580  000E56  AE0A               	btfss	String@value+1,7,c
  1581  000E58  D004               	goto	l1601
  1582                           
  1583                           ;BotLAB.c: 232:          value = -value;
  1584  000E5A  6C09               	negf	String@value,c
  1585  000E5C  1E0A               	comf	String@value+1,f,c
  1586  000E5E  B0D8               	btfsc	status,0,c
  1587  000E60  2A0A               	incf	String@value+1,f,c
  1588  000E62                     l1601:
  1589                           
  1590                           ;BotLAB.c: 235:      {;BotLAB.c: 236:          buffer[--c] = (value % 10) + '0';
  1591  000E62  060D               	decf	String@c,f,c
  1592  000E64  A0D8               	btfss	status,0,c
  1593  000E66  060E               	decf	String@c+1,f,c
  1594  000E68  0E19               	movlw	low String@buffer
  1595  000E6A  240D               	addwf	String@c,w,c
  1596  000E6C  6ED9               	movwf	fsr2l,c
  1597  000E6E  0E00               	movlw	high String@buffer
  1598  000E70  200E               	addwfc	String@c+1,w,c
  1599  000E72  6EDA               	movwf	fsr2h,c
  1600  000E74  C009  F001         	movff	String@value,___awmod@dividend
  1601  000E78  C00A  F002         	movff	String@value+1,___awmod@dividend+1
  1602  000E7C  0E00               	movlw	0
  1603  000E7E  6E04               	movwf	___awmod@divisor+1,c
  1604  000E80  0E0A               	movlw	10
  1605  000E82  6E03               	movwf	___awmod@divisor,c
  1606  000E84  ECE9  F007         	call	___awmod	;wreg free
  1607  000E88  5001               	movf	?___awmod,w,c
  1608  000E8A  0F30               	addlw	48
  1609  000E8C  6EDF               	movwf	indf2,c
  1610                           
  1611                           ;BotLAB.c: 237:          value /= 10;
  1612  000E8E  C009  F001         	movff	String@value,___awdiv@dividend
  1613  000E92  C00A  F002         	movff	String@value+1,___awdiv@dividend+1
  1614  000E96  0E00               	movlw	0
  1615  000E98  6E04               	movwf	___awdiv@divisor+1,c
  1616  000E9A  0E0A               	movlw	10
  1617  000E9C  6E03               	movwf	___awdiv@divisor,c
  1618  000E9E  EC69  F007         	call	___awdiv	;wreg free
  1619  000EA2  C001  F009         	movff	?___awdiv,String@value
  1620  000EA6  C002  F00A         	movff	?___awdiv+1,String@value+1
  1621                           
  1622                           ;BotLAB.c: 238:      } while (value);
  1623  000EAA  5009               	movf	String@value,w,c
  1624  000EAC  100A               	iorwf	String@value+1,w,c
  1625  000EAE  A4D8               	btfss	status,2,c
  1626  000EB0  D7D8               	goto	l1601
  1627                           
  1628                           ;BotLAB.c: 240:      if (original < 0)
  1629  000EB2  AE0C               	btfss	String@original+1,7,c
  1630  000EB4  D00B               	goto	l1611
  1631                           
  1632                           ;BotLAB.c: 241:          buffer[--c] = '-';
  1633  000EB6  060D               	decf	String@c,f,c
  1634  000EB8  A0D8               	btfss	status,0,c
  1635  000EBA  060E               	decf	String@c+1,f,c
  1636  000EBC  0E19               	movlw	low String@buffer
  1637  000EBE  240D               	addwf	String@c,w,c
  1638  000EC0  6ED9               	movwf	fsr2l,c
  1639  000EC2  0E00               	movlw	high String@buffer
  1640  000EC4  200E               	addwfc	String@c+1,w,c
  1641  000EC6  6EDA               	movwf	fsr2h,c
  1642  000EC8  0E2D               	movlw	45
  1643  000ECA  6EDF               	movwf	indf2,c
  1644  000ECC                     l1611:
  1645                           
  1646                           ;BotLAB.c: 243:      return &buffer[c];
  1647  000ECC  0E19               	movlw	String@buffer& (0+255)
  1648  000ECE  240D               	addwf	String@c,w,c
  1649  000ED0  0012               	return		;funcret
  1650  000ED2                     __end_of_String:
  1651                           	opt callstack 0
  1652                           
  1653 ;; *************** function ___awmod *****************
  1654 ;; Defined at:
  1655 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  dividend        2    0[COMRAM] int 
  1658 ;;  divisor         2    2[COMRAM] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  sign            1    5[COMRAM] unsigned char 
  1661 ;;  counter         1    4[COMRAM] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2    0[COMRAM] int 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         4       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1674 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1675 ;;Total ram usage:        6 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_String
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text7
  1685  000FD2                     __ptext7:
  1686                           	opt callstack 0
  1687  000FD2                     ___awmod:
  1688                           	opt callstack 29
  1689                           
  1690                           ;incstack = 0
  1691  000FD2  0E00               	movlw	0
  1692  000FD4  6E06               	movwf	___awmod@sign,c
  1693  000FD6  AE02               	btfss	___awmod@dividend+1,7,c
  1694  000FD8  D006               	goto	l1413
  1695  000FDA  6C01               	negf	___awmod@dividend,c
  1696  000FDC  1E02               	comf	___awmod@dividend+1,f,c
  1697  000FDE  B0D8               	btfsc	status,0,c
  1698  000FE0  2A02               	incf	___awmod@dividend+1,f,c
  1699  000FE2  0E01               	movlw	1
  1700  000FE4  6E06               	movwf	___awmod@sign,c
  1701  000FE6                     l1413:
  1702  000FE6  AE04               	btfss	___awmod@divisor+1,7,c
  1703  000FE8  D004               	goto	l1417
  1704  000FEA  6C03               	negf	___awmod@divisor,c
  1705  000FEC  1E04               	comf	___awmod@divisor+1,f,c
  1706  000FEE  B0D8               	btfsc	status,0,c
  1707  000FF0  2A04               	incf	___awmod@divisor+1,f,c
  1708  000FF2                     l1417:
  1709  000FF2  5003               	movf	___awmod@divisor,w,c
  1710  000FF4  1004               	iorwf	___awmod@divisor+1,w,c
  1711  000FF6  B4D8               	btfsc	status,2,c
  1712  000FF8  D018               	goto	l1433
  1713  000FFA  0E01               	movlw	1
  1714  000FFC  6E05               	movwf	___awmod@counter,c
  1715  000FFE  D004               	goto	l1423
  1716  001000                     l1421:
  1717  001000  90D8               	bcf	status,0,c
  1718  001002  3603               	rlcf	___awmod@divisor,f,c
  1719  001004  3604               	rlcf	___awmod@divisor+1,f,c
  1720  001006  2A05               	incf	___awmod@counter,f,c
  1721  001008                     l1423:
  1722  001008  AE04               	btfss	___awmod@divisor+1,7,c
  1723  00100A  D7FA               	goto	l1421
  1724  00100C                     u470:
  1725  00100C  5003               	movf	___awmod@divisor,w,c
  1726  00100E  5C01               	subwf	___awmod@dividend,w,c
  1727  001010  5004               	movf	___awmod@divisor+1,w,c
  1728  001012  5802               	subwfb	___awmod@dividend+1,w,c
  1729  001014  A0D8               	btfss	status,0,c
  1730  001016  D004               	goto	l1429
  1731  001018  5003               	movf	___awmod@divisor,w,c
  1732  00101A  5E01               	subwf	___awmod@dividend,f,c
  1733  00101C  5004               	movf	___awmod@divisor+1,w,c
  1734  00101E  5A02               	subwfb	___awmod@dividend+1,f,c
  1735  001020                     l1429:
  1736  001020  90D8               	bcf	status,0,c
  1737  001022  3204               	rrcf	___awmod@divisor+1,f,c
  1738  001024  3203               	rrcf	___awmod@divisor,f,c
  1739  001026  2E05               	decfsz	___awmod@counter,f,c
  1740  001028  D7F1               	goto	u470
  1741  00102A                     l1433:
  1742  00102A  5006               	movf	___awmod@sign,w,c
  1743  00102C  B4D8               	btfsc	status,2,c
  1744  00102E  D004               	goto	l1437
  1745  001030  6C01               	negf	___awmod@dividend,c
  1746  001032  1E02               	comf	___awmod@dividend+1,f,c
  1747  001034  B0D8               	btfsc	status,0,c
  1748  001036  2A02               	incf	___awmod@dividend+1,f,c
  1749  001038                     l1437:
  1750  001038  C001  F001         	movff	___awmod@dividend,?___awmod
  1751  00103C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1752  001040  0012               	return		;funcret
  1753  001042                     __end_of___awmod:
  1754                           	opt callstack 0
  1755                           
  1756 ;; *************** function ___awdiv *****************
  1757 ;; Defined at:
  1758 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  dividend        2    0[COMRAM] int 
  1761 ;;  divisor         2    2[COMRAM] int 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  quotient        2    6[COMRAM] int 
  1764 ;;  sign            1    5[COMRAM] unsigned char 
  1765 ;;  counter         1    4[COMRAM] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2    0[COMRAM] int 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1775 ;;      Params:         4       0       0       0       0       0       0       0       0
  1776 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1778 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1779 ;;Total ram usage:        8 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_String
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text8
  1789  000ED2                     __ptext8:
  1790                           	opt callstack 0
  1791  000ED2                     ___awdiv:
  1792                           	opt callstack 29
  1793                           
  1794                           ;incstack = 0
  1795  000ED2  0E00               	movlw	0
  1796  000ED4  6E06               	movwf	___awdiv@sign,c
  1797  000ED6  AE04               	btfss	___awdiv@divisor+1,7,c
  1798  000ED8  D006               	goto	l1369
  1799  000EDA  6C03               	negf	___awdiv@divisor,c
  1800  000EDC  1E04               	comf	___awdiv@divisor+1,f,c
  1801  000EDE  B0D8               	btfsc	status,0,c
  1802  000EE0  2A04               	incf	___awdiv@divisor+1,f,c
  1803  000EE2  0E01               	movlw	1
  1804  000EE4  6E06               	movwf	___awdiv@sign,c
  1805  000EE6                     l1369:
  1806  000EE6  AE02               	btfss	___awdiv@dividend+1,7,c
  1807  000EE8  D006               	goto	l1375
  1808  000EEA  6C01               	negf	___awdiv@dividend,c
  1809  000EEC  1E02               	comf	___awdiv@dividend+1,f,c
  1810  000EEE  B0D8               	btfsc	status,0,c
  1811  000EF0  2A02               	incf	___awdiv@dividend+1,f,c
  1812  000EF2  0E01               	movlw	1
  1813  000EF4  1A06               	xorwf	___awdiv@sign,f,c
  1814  000EF6                     l1375:
  1815  000EF6  0E00               	movlw	0
  1816  000EF8  6E08               	movwf	___awdiv@quotient+1,c
  1817  000EFA  0E00               	movlw	0
  1818  000EFC  6E07               	movwf	___awdiv@quotient,c
  1819  000EFE  5003               	movf	___awdiv@divisor,w,c
  1820  000F00  1004               	iorwf	___awdiv@divisor+1,w,c
  1821  000F02  B4D8               	btfsc	status,2,c
  1822  000F04  D01C               	goto	l1397
  1823  000F06  0E01               	movlw	1
  1824  000F08  6E05               	movwf	___awdiv@counter,c
  1825  000F0A  D004               	goto	l1383
  1826  000F0C                     l1381:
  1827  000F0C  90D8               	bcf	status,0,c
  1828  000F0E  3603               	rlcf	___awdiv@divisor,f,c
  1829  000F10  3604               	rlcf	___awdiv@divisor+1,f,c
  1830  000F12  2A05               	incf	___awdiv@counter,f,c
  1831  000F14                     l1383:
  1832  000F14  AE04               	btfss	___awdiv@divisor+1,7,c
  1833  000F16  D7FA               	goto	l1381
  1834  000F18                     u410:
  1835  000F18  90D8               	bcf	status,0,c
  1836  000F1A  3607               	rlcf	___awdiv@quotient,f,c
  1837  000F1C  3608               	rlcf	___awdiv@quotient+1,f,c
  1838  000F1E  5003               	movf	___awdiv@divisor,w,c
  1839  000F20  5C01               	subwf	___awdiv@dividend,w,c
  1840  000F22  5004               	movf	___awdiv@divisor+1,w,c
  1841  000F24  5802               	subwfb	___awdiv@dividend+1,w,c
  1842  000F26  A0D8               	btfss	status,0,c
  1843  000F28  D005               	goto	l1393
  1844  000F2A  5003               	movf	___awdiv@divisor,w,c
  1845  000F2C  5E01               	subwf	___awdiv@dividend,f,c
  1846  000F2E  5004               	movf	___awdiv@divisor+1,w,c
  1847  000F30  5A02               	subwfb	___awdiv@dividend+1,f,c
  1848  000F32  8007               	bsf	___awdiv@quotient,0,c
  1849  000F34                     l1393:
  1850  000F34  90D8               	bcf	status,0,c
  1851  000F36  3204               	rrcf	___awdiv@divisor+1,f,c
  1852  000F38  3203               	rrcf	___awdiv@divisor,f,c
  1853  000F3A  2E05               	decfsz	___awdiv@counter,f,c
  1854  000F3C  D7ED               	goto	u410
  1855  000F3E                     l1397:
  1856  000F3E  5006               	movf	___awdiv@sign,w,c
  1857  000F40  B4D8               	btfsc	status,2,c
  1858  000F42  D004               	goto	l1401
  1859  000F44  6C07               	negf	___awdiv@quotient,c
  1860  000F46  1E08               	comf	___awdiv@quotient+1,f,c
  1861  000F48  B0D8               	btfsc	status,0,c
  1862  000F4A  2A08               	incf	___awdiv@quotient+1,f,c
  1863  000F4C                     l1401:
  1864  000F4C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1865  000F50  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1866  000F54  0012               	return		;funcret
  1867  000F56                     __end_of___awdiv:
  1868                           	opt callstack 0
  1869                           
  1870 ;; *************** function _SerialPrintln *****************
  1871 ;; Defined at:
  1872 ;;		line 212 in file "BotLAB.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  str             2   14[COMRAM] PTR unsigned char 
  1875 ;;		 -> RAM(2047), 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:         2       0       0       0       0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1890 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:        2 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    1
  1894 ;; This function calls:
  1895 ;;		_SerialPrintChar
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text9
  1902  0010F4                     __ptext9:
  1903                           	opt callstack 0
  1904  0010F4                     _SerialPrintln:
  1905                           	opt callstack 29
  1906                           
  1907                           ;BotLAB.c: 213:     while(*str != '\0'){
  1908                           
  1909                           ;incstack = 0
  1910  0010F4  D009               	goto	l1621
  1911  0010F6                     l1617:
  1912                           
  1913                           ;BotLAB.c: 214:         SerialPrintChar(*str);
  1914  0010F6  C00F  FFD9         	movff	SerialPrintln@str,fsr2l
  1915  0010FA  C010  FFDA         	movff	SerialPrintln@str+1,fsr2h
  1916  0010FE  50DF               	movf	indf2,w,c
  1917  001100  ECAF  F008         	call	_SerialPrintChar
  1918                           
  1919                           ;BotLAB.c: 215:         str++;
  1920  001104  4A0F               	infsnz	SerialPrintln@str,f,c
  1921  001106  2A10               	incf	SerialPrintln@str+1,f,c
  1922  001108                     l1621:
  1923                           
  1924                           ;BotLAB.c: 213:     while(*str != '\0'){
  1925  001108  C00F  FFD9         	movff	SerialPrintln@str,fsr2l
  1926  00110C  C010  FFDA         	movff	SerialPrintln@str+1,fsr2h
  1927  001110  50DF               	movf	indf2,w,c
  1928  001112  A4D8               	btfss	status,2,c
  1929  001114  D7F0               	goto	l1617
  1930                           
  1931                           ;BotLAB.c: 217:     SerialPrintChar('\r');
  1932  001116  0E0D               	movlw	13
  1933  001118  ECAF  F008         	call	_SerialPrintChar
  1934  00111C  0012               	return		;funcret
  1935  00111E                     __end_of_SerialPrintln:
  1936                           	opt callstack 0
  1937                           
  1938 ;; *************** function _SerialPrint *****************
  1939 ;; Defined at:
  1940 ;;		line 205 in file "BotLAB.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  str             2    1[COMRAM] PTR unsigned char 
  1943 ;;		 -> STR_1(8), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1955 ;;      Params:         2       0       0       0       0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1958 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        2 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    1
  1962 ;; This function calls:
  1963 ;;		_SerialPrintChar
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text10
  1970  00111E                     __ptext10:
  1971                           	opt callstack 0
  1972  00111E                     _SerialPrint:
  1973                           	opt callstack 29
  1974                           
  1975                           ;BotLAB.c: 206:     while(*str != '\0'){
  1976                           
  1977                           ;incstack = 0
  1978  00111E  D00A               	goto	l1589
  1979  001120                     l1585:
  1980                           
  1981                           ;BotLAB.c: 207:         SerialPrintChar(*str);
  1982  001120  C002  FFF6         	movff	SerialPrint@str,tblptrl
  1983  001124  C003  FFF7         	movff	SerialPrint@str+1,tblptrh
  1984  001128                     	if	0	;tblptru may be non-zero
  1985  001128                     	endif
  1986  001128                     	if	0	;tblptru may be non-zero
  1987  001128                     	endif
  1988  001128  0008               	tblrd		*
  1989  00112A  50F5               	movf	tablat,w,c
  1990  00112C  ECAF  F008         	call	_SerialPrintChar
  1991                           
  1992                           ;BotLAB.c: 208:         str++;
  1993  001130  4A02               	infsnz	SerialPrint@str,f,c
  1994  001132  2A03               	incf	SerialPrint@str+1,f,c
  1995  001134                     l1589:
  1996                           
  1997                           ;BotLAB.c: 206:     while(*str != '\0'){
  1998  001134  C002  FFF6         	movff	SerialPrint@str,tblptrl
  1999  001138  C003  FFF7         	movff	SerialPrint@str+1,tblptrh
  2000  00113C                     	if	0	;tblptru may be non-zero
  2001  00113C                     	endif
  2002  00113C                     	if	0	;tblptru may be non-zero
  2003  00113C                     	endif
  2004  00113C  0008               	tblrd		*
  2005  00113E  50F5               	movf	tablat,w,c
  2006  001140  0900               	iorlw	0
  2007  001142  B4D8               	btfsc	status,2,c
  2008  001144  0012               	return	
  2009  001146  D7EC               	goto	l1585
  2010  001148                     __end_of_SerialPrint:
  2011                           	opt callstack 0
  2012                           
  2013 ;; *************** function _SerialPrintChar *****************
  2014 ;; Defined at:
  2015 ;;		line 196 in file "BotLAB.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  data            1    wreg     unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  data            1    0[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2032 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2033 ;;Total ram usage:        1 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_SerialPrint
  2039 ;;		_SerialPrintln
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text11
  2044  00115E                     __ptext11:
  2045                           	opt callstack 0
  2046  00115E                     _SerialPrintChar:
  2047                           	opt callstack 29
  2048                           
  2049                           ;incstack = 0
  2050                           ;SerialPrintChar@data stored from wreg
  2051  00115E  6E01               	movwf	SerialPrintChar@data,c
  2052  001160                     
  2053                           ;BotLAB.c: 197:     while(TXSTAbits.TRMT == 0);
  2054  001160  A2AC               	btfss	4012,1,c	;volatile
  2055  001162  D7FE               	goto	l939
  2056                           
  2057                           ;BotLAB.c: 198:     TXREG = data;
  2058  001164  C001  FFAD         	movff	SerialPrintChar@data,4013	;volatile
  2059  001168  0012               	return		;funcret
  2060  00116A                     __end_of_SerialPrintChar:
  2061                           	opt callstack 0
  2062                           
  2063 ;; *************** function _SerialBegin *****************
  2064 ;; Defined at:
  2065 ;;		line 174 in file "BotLAB.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  BAUD            4   14[COMRAM] long 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2079 ;;      Params:         4       0       0       0       0       0       0       0       0
  2080 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2082 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2083 ;;Total ram usage:        8 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    1
  2086 ;; This function calls:
  2087 ;;		___aldiv
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text12
  2094  001042                     __ptext12:
  2095                           	opt callstack 0
  2096  001042                     _SerialBegin:
  2097                           	opt callstack 29
  2098                           
  2099                           ;BotLAB.c: 176:     TRISCbits.RC6 = 0;
  2100                           
  2101                           ;incstack = 0
  2102  001042  9C94               	bcf	3988,6,c	;volatile
  2103                           
  2104                           ;BotLAB.c: 177:     TRISCbits.RC7 = 1;
  2105  001044  8E94               	bsf	3988,7,c	;volatile
  2106                           
  2107                           ;BotLAB.c: 180:     SPBRG = (unsigned char)(((20000000/BAUD)/64)-1);
  2108  001046  C00F  F005         	movff	SerialBegin@BAUD,___aldiv@divisor
  2109  00104A  C010  F006         	movff	SerialBegin@BAUD+1,___aldiv@divisor+1
  2110  00104E  C011  F007         	movff	SerialBegin@BAUD+2,___aldiv@divisor+2
  2111  001052  C012  F008         	movff	SerialBegin@BAUD+3,___aldiv@divisor+3
  2112  001056  0E00               	movlw	0
  2113  001058  6E01               	movwf	___aldiv@dividend,c
  2114  00105A  0E2D               	movlw	45
  2115  00105C  6E02               	movwf	___aldiv@dividend+1,c
  2116  00105E  0E31               	movlw	49
  2117  001060  6E03               	movwf	___aldiv@dividend+2,c
  2118  001062  0E01               	movlw	1
  2119  001064  6E04               	movwf	___aldiv@dividend+3,c
  2120  001066  ECBB  F006         	call	___aldiv	;wreg free
  2121  00106A  C001  F013         	movff	?___aldiv,_SerialBegin$1287
  2122  00106E  C002  F014         	movff	?___aldiv+1,_SerialBegin$1287+1
  2123  001072  C003  F015         	movff	?___aldiv+2,_SerialBegin$1287+2
  2124  001076  C004  F016         	movff	?___aldiv+3,_SerialBegin$1287+3
  2125                           
  2126                           ;BotLAB.c: 180:     SPBRG = (unsigned char)(((20000000/BAUD)/64)-1);
  2127  00107A  C013  F001         	movff	_SerialBegin$1287,___aldiv@dividend
  2128  00107E  C014  F002         	movff	_SerialBegin$1287+1,___aldiv@dividend+1
  2129  001082  C015  F003         	movff	_SerialBegin$1287+2,___aldiv@dividend+2
  2130  001086  C016  F004         	movff	_SerialBegin$1287+3,___aldiv@dividend+3
  2131  00108A  0E40               	movlw	64
  2132  00108C  6E05               	movwf	___aldiv@divisor,c
  2133  00108E  0E00               	movlw	0
  2134  001090  6E06               	movwf	___aldiv@divisor+1,c
  2135  001092  0E00               	movlw	0
  2136  001094  6E07               	movwf	___aldiv@divisor+2,c
  2137  001096  0E00               	movlw	0
  2138  001098  6E08               	movwf	___aldiv@divisor+3,c
  2139  00109A  ECBB  F006         	call	___aldiv	;wreg free
  2140  00109E  0401               	decf	?___aldiv,w,c
  2141  0010A0  6EAF               	movwf	4015,c	;volatile
  2142                           
  2143                           ;BotLAB.c: 183:     TXSTAbits.BRGH = 0;
  2144  0010A2  94AC               	bcf	4012,2,c	;volatile
  2145                           
  2146                           ;BotLAB.c: 184:     TXSTAbits.SYNC = 0;
  2147  0010A4  98AC               	bcf	4012,4,c	;volatile
  2148                           
  2149                           ;BotLAB.c: 185:     RCSTAbits.SPEN = 1;
  2150  0010A6  8EAB               	bsf	4011,7,c	;volatile
  2151                           
  2152                           ;BotLAB.c: 188:     TXSTAbits.TX9 = 0;
  2153  0010A8  9CAC               	bcf	4012,6,c	;volatile
  2154                           
  2155                           ;BotLAB.c: 189:     TXSTAbits.TXEN = 1;
  2156  0010AA  8AAC               	bsf	4012,5,c	;volatile
  2157                           
  2158                           ;BotLAB.c: 192:     RCSTAbits.RC9 = 0;
  2159  0010AC  9CAB               	bcf	4011,6,c	;volatile
  2160                           
  2161                           ;BotLAB.c: 193:     RCSTAbits.CREN = 1;
  2162  0010AE  88AB               	bsf	4011,4,c	;volatile
  2163  0010B0  0012               	return		;funcret
  2164  0010B2                     __end_of_SerialBegin:
  2165                           	opt callstack 0
  2166                           
  2167 ;; *************** function ___aldiv *****************
  2168 ;; Defined at:
  2169 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  dividend        4    0[COMRAM] long 
  2172 ;;  divisor         4    4[COMRAM] long 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  quotient        4   10[COMRAM] long 
  2175 ;;  sign            1    9[COMRAM] unsigned char 
  2176 ;;  counter         1    8[COMRAM] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  4    0[COMRAM] long 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         8       0       0       0       0       0       0       0       0
  2187 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2189 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2190 ;;Total ram usage:       14 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_SerialBegin
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text13
  2200  000D76                     __ptext13:
  2201                           	opt callstack 0
  2202  000D76                     ___aldiv:
  2203                           	opt callstack 29
  2204                           
  2205                           ;incstack = 0
  2206  000D76  0E00               	movlw	0
  2207  000D78  6E0A               	movwf	___aldiv@sign,c
  2208  000D7A  AE08               	btfss	___aldiv@divisor+3,7,c
  2209  000D7C  D00A               	goto	l1325
  2210  000D7E  1E08               	comf	___aldiv@divisor+3,f,c
  2211  000D80  1E07               	comf	___aldiv@divisor+2,f,c
  2212  000D82  1E06               	comf	___aldiv@divisor+1,f,c
  2213  000D84  6C05               	negf	___aldiv@divisor,c
  2214  000D86  0E00               	movlw	0
  2215  000D88  2206               	addwfc	___aldiv@divisor+1,f,c
  2216  000D8A  2207               	addwfc	___aldiv@divisor+2,f,c
  2217  000D8C  2208               	addwfc	___aldiv@divisor+3,f,c
  2218  000D8E  0E01               	movlw	1
  2219  000D90  6E0A               	movwf	___aldiv@sign,c
  2220  000D92                     l1325:
  2221  000D92  AE04               	btfss	___aldiv@dividend+3,7,c
  2222  000D94  D00A               	goto	l1331
  2223  000D96  1E04               	comf	___aldiv@dividend+3,f,c
  2224  000D98  1E03               	comf	___aldiv@dividend+2,f,c
  2225  000D9A  1E02               	comf	___aldiv@dividend+1,f,c
  2226  000D9C  6C01               	negf	___aldiv@dividend,c
  2227  000D9E  0E00               	movlw	0
  2228  000DA0  2202               	addwfc	___aldiv@dividend+1,f,c
  2229  000DA2  2203               	addwfc	___aldiv@dividend+2,f,c
  2230  000DA4  2204               	addwfc	___aldiv@dividend+3,f,c
  2231  000DA6  0E01               	movlw	1
  2232  000DA8  1A0A               	xorwf	___aldiv@sign,f,c
  2233  000DAA                     l1331:
  2234  000DAA  0E00               	movlw	0
  2235  000DAC  6E0B               	movwf	___aldiv@quotient,c
  2236  000DAE  0E00               	movlw	0
  2237  000DB0  6E0C               	movwf	___aldiv@quotient+1,c
  2238  000DB2  0E00               	movlw	0
  2239  000DB4  6E0D               	movwf	___aldiv@quotient+2,c
  2240  000DB6  0E00               	movlw	0
  2241  000DB8  6E0E               	movwf	___aldiv@quotient+3,c
  2242  000DBA  5005               	movf	___aldiv@divisor,w,c
  2243  000DBC  1006               	iorwf	___aldiv@divisor+1,w,c
  2244  000DBE  1007               	iorwf	___aldiv@divisor+2,w,c
  2245  000DC0  1008               	iorwf	___aldiv@divisor+3,w,c
  2246  000DC2  B4D8               	btfsc	status,2,c
  2247  000DC4  D02A               	goto	l1353
  2248  000DC6  0E01               	movlw	1
  2249  000DC8  6E09               	movwf	___aldiv@counter,c
  2250  000DCA  D006               	goto	l1339
  2251  000DCC                     l1337:
  2252  000DCC  90D8               	bcf	status,0,c
  2253  000DCE  3605               	rlcf	___aldiv@divisor,f,c
  2254  000DD0  3606               	rlcf	___aldiv@divisor+1,f,c
  2255  000DD2  3607               	rlcf	___aldiv@divisor+2,f,c
  2256  000DD4  3608               	rlcf	___aldiv@divisor+3,f,c
  2257  000DD6  2A09               	incf	___aldiv@counter,f,c
  2258  000DD8                     l1339:
  2259  000DD8  AE08               	btfss	___aldiv@divisor+3,7,c
  2260  000DDA  D7F8               	goto	l1337
  2261  000DDC                     u350:
  2262  000DDC  90D8               	bcf	status,0,c
  2263  000DDE  360B               	rlcf	___aldiv@quotient,f,c
  2264  000DE0  360C               	rlcf	___aldiv@quotient+1,f,c
  2265  000DE2  360D               	rlcf	___aldiv@quotient+2,f,c
  2266  000DE4  360E               	rlcf	___aldiv@quotient+3,f,c
  2267  000DE6  5005               	movf	___aldiv@divisor,w,c
  2268  000DE8  5C01               	subwf	___aldiv@dividend,w,c
  2269  000DEA  5006               	movf	___aldiv@divisor+1,w,c
  2270  000DEC  5802               	subwfb	___aldiv@dividend+1,w,c
  2271  000DEE  5007               	movf	___aldiv@divisor+2,w,c
  2272  000DF0  5803               	subwfb	___aldiv@dividend+2,w,c
  2273  000DF2  5008               	movf	___aldiv@divisor+3,w,c
  2274  000DF4  5804               	subwfb	___aldiv@dividend+3,w,c
  2275  000DF6  A0D8               	btfss	status,0,c
  2276  000DF8  D009               	goto	l1349
  2277  000DFA  5005               	movf	___aldiv@divisor,w,c
  2278  000DFC  5E01               	subwf	___aldiv@dividend,f,c
  2279  000DFE  5006               	movf	___aldiv@divisor+1,w,c
  2280  000E00  5A02               	subwfb	___aldiv@dividend+1,f,c
  2281  000E02  5007               	movf	___aldiv@divisor+2,w,c
  2282  000E04  5A03               	subwfb	___aldiv@dividend+2,f,c
  2283  000E06  5008               	movf	___aldiv@divisor+3,w,c
  2284  000E08  5A04               	subwfb	___aldiv@dividend+3,f,c
  2285  000E0A  800B               	bsf	___aldiv@quotient,0,c
  2286  000E0C                     l1349:
  2287  000E0C  90D8               	bcf	status,0,c
  2288  000E0E  3208               	rrcf	___aldiv@divisor+3,f,c
  2289  000E10  3207               	rrcf	___aldiv@divisor+2,f,c
  2290  000E12  3206               	rrcf	___aldiv@divisor+1,f,c
  2291  000E14  3205               	rrcf	___aldiv@divisor,f,c
  2292  000E16  2E09               	decfsz	___aldiv@counter,f,c
  2293  000E18  D7E1               	goto	u350
  2294  000E1A                     l1353:
  2295  000E1A  500A               	movf	___aldiv@sign,w,c
  2296  000E1C  B4D8               	btfsc	status,2,c
  2297  000E1E  D008               	goto	l1357
  2298  000E20  1E0E               	comf	___aldiv@quotient+3,f,c
  2299  000E22  1E0D               	comf	___aldiv@quotient+2,f,c
  2300  000E24  1E0C               	comf	___aldiv@quotient+1,f,c
  2301  000E26  6C0B               	negf	___aldiv@quotient,c
  2302  000E28  0E00               	movlw	0
  2303  000E2A  220C               	addwfc	___aldiv@quotient+1,f,c
  2304  000E2C  220D               	addwfc	___aldiv@quotient+2,f,c
  2305  000E2E  220E               	addwfc	___aldiv@quotient+3,f,c
  2306  000E30                     l1357:
  2307  000E30  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2308  000E34  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2309  000E38  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2310  000E3C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2311  000E40  0012               	return		;funcret
  2312  000E42                     __end_of___aldiv:
  2313                           	opt callstack 0
  2314                           
  2315                           	psect	rparam
  2316  0000                     tosu	equ	0xFFF
  2317                           tosh	equ	0xFFE
  2318                           tosl	equ	0xFFD
  2319                           stkptr	equ	0xFFC
  2320                           pclatu	equ	0xFFB
  2321                           pclath	equ	0xFFA
  2322                           pcl	equ	0xFF9
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           prodh	equ	0xFF4
  2328                           prodl	equ	0xFF3
  2329                           indf0	equ	0xFEF
  2330                           postinc0	equ	0xFEE
  2331                           postdec0	equ	0xFED
  2332                           preinc0	equ	0xFEC
  2333                           plusw0	equ	0xFEB
  2334                           fsr0h	equ	0xFEA
  2335                           fsr0l	equ	0xFE9
  2336                           wreg	equ	0xFE8
  2337                           indf1	equ	0xFE7
  2338                           postinc1	equ	0xFE6
  2339                           postdec1	equ	0xFE5
  2340                           preinc1	equ	0xFE4
  2341                           plusw1	equ	0xFE3
  2342                           fsr1h	equ	0xFE2
  2343                           fsr1l	equ	0xFE1
  2344                           bsr	equ	0xFE0
  2345                           indf2	equ	0xFDF
  2346                           postinc2	equ	0xFDE
  2347                           postdec2	equ	0xFDD
  2348                           preinc2	equ	0xFDC
  2349                           plusw2	equ	0xFDB
  2350                           fsr2h	equ	0xFDA
  2351                           fsr2l	equ	0xFD9
  2352                           status	equ	0xFD8


Data Sizes:
    Strings     8
    Constant    6
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    SerialPrintln@str	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    SerialPrint@str	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_SerialBegin
    _analogRead->_readChannel
    _String->___awdiv
    _SerialPrintln->_String
    _SerialPrint->_SerialPrintChar
    _SerialBegin->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4804
                                             22 COMRAM     2     2      0
                        _SerialBegin
                        _SerialPrint
                      _SerialPrintln
                             _String
                         _analogRead
                       _digitalWrite
                            _pinMode
            _setupAnalogDigitalInput
 ---------------------------------------------------------------------------------
 (1) _setupAnalogDigitalInput                              4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              6     2      4     240
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _digitalWrite                                         6     2      4     848
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _analogRead                                           6     4      2    1399
                                              5 COMRAM     6     4      2
                        _readChannel
 ---------------------------------------------------------------------------------
 (2) _readChannel                                          5     3      2    1003
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _String                                               6     4      2    1222
                                              8 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SerialPrintln                                        2     0      2     136
                                             14 COMRAM     2     0      2
                    _SerialPrintChar
                             _String (ARG)
 ---------------------------------------------------------------------------------
 (1) _SerialPrint                                          2     0      2     136
                                              1 COMRAM     2     0      2
                    _SerialPrintChar
 ---------------------------------------------------------------------------------
 (2) _SerialPrintChar                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SerialBegin                                          8     4      4     725
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SerialBegin
     ___aldiv
   _SerialPrint
     _SerialPrintChar
   _SerialPrintln
     _SerialPrintChar
     _String (ARG)
       ___awdiv
       ___awmod
   _String
     ___awdiv
     ___awmod
   _analogRead
     _readChannel
   _digitalWrite
   _pinMode
   _setupAnalogDigitalInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      27       1       41.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      20        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Nov 09 15:29:16 2020

               ??_SerialPrintChar 0001                                l33 0BC8  
                              l98 0FC8                      ___awdiv@sign 0006  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                               l200 0ACA  
                             l113 10CE                               l201 0ACE  
                             l121 081A                               l210 0AF2  
                             l202 0AD2                               l130 083A  
                             l211 0AF6                               l203 0AD6  
                             l131 083E                               l123 081E  
                             l204 0ADA                               l140 0862  
                             l132 0842                               l124 0822  
                             l205 0ADE                               l133 0846  
                             l125 0826                               l206 0AE2  
                             l150 090A                               l134 084A  
                             l126 082A                               l207 0AE6  
                             l151 090E                               l135 084E  
                             l127 082E                               l208 0AEA  
                             l160 0932                               l152 0912  
                             l144 08F6                               l136 0852  
                             l128 0832                               l209 0AEE  
                             l161 0936                               l153 0916  
                             l137 0856                               l129 0836  
                             l162 093A                               l154 091A  
                             l146 08FA                               l138 085A  
                             l171 09D6                               l163 093E  
                             l155 091E                               l147 08FE  
                             l139 085E                               l180 09FA  
                             l172 09DA                               l156 0922  
                             l148 0902                               l181 09FE  
                             l173 09DE                               l157 0926  
                             l149 0906                               l182 0A02  
                             l174 09E2                               l158 092A  
                             l183 0A06                               l175 09E6  
                             l159 092E                               l192 0AAE  
                             l184 0A0A                               l176 09EA  
                             l185 0A0E                               l177 09EE  
                             l169 09D2                               l194 0AB2  
                             l186 0A12                               l178 09F2  
                             l195 0AB6                               l187 0A16  
                             l179 09F6                               l196 0ABA  
                             l188 0A1A                               l197 0ABE  
                             l198 0AC2                               l199 0AC6  
                             l939 1160                      __CFG_CPB$OFF 000000  
                             _LED 0805                               u410 0F18  
                             u350 0DDC                      __CFG_CPD$OFF 000000  
                             u470 100C                               u607 0C2C  
                             u617 0C4E                               u627 0C74  
                             u637 0C96                      __CFG_BOR$OFF 000000  
                    ___awmod@sign 0006                               wreg 000FE8  
                    __CFG_FOSC$HS 000000                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1401 0F4C  
                            l1331 0DAA                              l1325 0D92  
                            l1421 1000                              l1413 0FE6  
                            l1423 1008                              l1337 0DCC  
                            l1353 0E1A                              l1433 102A  
                            l1417 0FF2                              l1601 0E62  
                            l1339 0DD8                              l1611 0ECC  
                            l1531 0A1E                              l1515 0942  
                            l1507 0866                              l1357 0E30  
                            l1349 0E0C                              l1621 1108  
                            l1381 0F0C                              l1437 1038  
                            l1429 1020                              l1533 0AA4  
                            l1509 08EC                              l1461 0CA2  
                            l1383 0F14                              l1375 0EF6  
                            l1551 0F58                              l1471 0CC0  
                            l1463 0CA8                              l1617 10F6  
                            l1393 0F34                              l1369 0EE6  
                            l1481 0CDE                              l1473 0CC6  
                            l1465 0CAE                              l1539 0AFA  
                            l1491 0CFC                              l1483 0CE4  
                            l1475 0CCC                              l1467 0CB4  
                            l1397 0F3E                              l1485 0CEA  
                            l1477 0CD2                              l1469 0CBA  
                            l1487 0CF0                              l1479 0CD8  
                            l1495 0D02                              l1639 0C5A  
                            l1585 1120                              l1577 0F6E  
                            l1489 0CF6                              l1589 1134  
                            STR_1 0807                              _main 0B80  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr2l 000FD9                              start 0000  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                      ?_readChannel 0001  
                   __CFG_PLLDIV$1 000000                    __CFG_CCP2MX$ON 000000  
                 __end_of___aldiv 0E42                             ?_main 0001  
                 __end_of___awdiv 0F56                   __end_of___awmod 1042  
                 ___awdiv@divisor 0003                   ___awdiv@counter 0005  
                           _RCREG 000FAE                             _SPBRG 000FAF  
           __end_of_SerialPrintln 111E                     __CFG_USBDIV$1 000000  
                           _TXREG 000FAD                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _letra 0027  
                 __end_of_pinMode 09C8                             tablat 000FF5  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
            __end_of_digitalWrite 0B80                   __initialization 1148  
                    __end_of_main 0CA0                            ??_main 0017  
              readChannel@channel 0001                     __activetblptr 000002  
                          _ADCON1 000FC1                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  ___awdiv@dividend 0001  
                SerialPrintln@str 000F                     ??_SerialBegin 0013  
                   ??_SerialPrint 0004                    __CFG_XINST$OFF 000000  
                          _String 0E42                         ??___aldiv 0009  
                       ??___awdiv 0005                    __CFG_STVREN$ON 000000  
                       ??___awmod 0005                            clear_0 114E  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                 ___awmod@counter 0005                 analogRead@channel 0006  
                    String@buffer 0019                         ??_pinMode 0005  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _SerialPrintChar 115E               SerialPrintChar@data 0001  
                      __accesstop 0060           __end_of__initialization 1154  
                   ___rparam_used 000001               __end_of_SerialBegin 10B2  
                  __pcstackCOMRAM 0001               __end_of_SerialPrint 1148  
            __size_of_readChannel 0042  __size_of_setupAnalogDigitalInput 00D6  
                _SerialBegin$1287 0013             __size_of_digitalWrite 01B8  
                      _analogRead 0F56                           ?_String 0009  
             readChannel@valueADC 0004           __end_of_SerialPrintChar 116A  
                    _digitalWrite 09C8                   __CFG_VREGEN$OFF 000000  
                 SerialBegin@BAUD 000F                       _SerialBegin 1042  
                     _SerialPrint 111E                           __Hparam 0000  
                         __Lparam 0000                           ___aldiv 0D76  
                 __size_of_String 0090                           ___awdiv 0ED2  
                         ___awmod 0FD2                      __psmallconst 0800  
                         String@c 000D                           __pcinit 1148  
                         __ramtop 0800                           __ptext0 0B80  
                         __ptext1 0CA0                           __ptext2 0810  
                         __ptext3 09C8                           __ptext4 0F56  
                         __ptext5 10B2                           __ptext6 0E42  
                         __ptext7 0FD2                           __ptext8 0ED2  
                         __ptext9 10F4                 __end_of_myChannel 0805  
                         _pinMode 0810                  ___awmod@dividend 0001  
                ___aldiv@dividend 0001     setupAnalogDigitalInput@inputs 0001  
            end_of_initialization 1154                     __Lmediumconst 0000  
                     ?_analogRead 0006                  pinMode@direction 0003  
          __size_of_SerialPrintln 002A                         _RCSTAbits 000FAB  
                ___aldiv@quotient 000B                           postinc0 000FEE  
         _setupAnalogDigitalInput 0CA0                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                  ?_SerialPrintChar 0001  
                       _TXSTAbits 000FAC                    __end_of_String 0ED2  
             __size_of_analogRead 007C               start_initialization 1148  
                   _SerialPrintln 10F4                       __end_of_LED 0807  
                   ??_readChannel 0003         ??_setupAnalogDigitalInput 0003  
                        ??_String 000B                  __CFG_LPT1OSC$OFF 000000  
                     String@value 0009                    ?_SerialPrintln 000F  
                     __pbssCOMRAM 0019                        pinMode@pin 0001  
                    ?_SerialBegin 000F                      ?_SerialPrint 0002  
                        ?___aldiv 0001                          ?___awdiv 0001  
                        ?___awmod 0001               __end_of_readChannel 10F4  
                     __smallconst 0800                          ?_pinMode 0001  
                       _myChannel 0803   __end_of_setupAnalogDigitalInput 0D76  
                 ___aldiv@divisor 0005                   ___aldiv@counter 0009  
                    ??_analogRead 0008                  __CFG_WDTPS$32768 000000  
                      _ADCON0bits 000FC2                   ??_SerialPrintln 0011  
                      _ADCON2bits 000FC0                __end_of_analogRead 0FD2  
             __end_of_numChannels 0803                    SerialPrint@str 0002  
                        __Hrparam 0000                          __Lrparam 0000  
                     _readChannel 10B2                  __size_of___aldiv 00CC  
                __size_of___awdiv 0084                  __size_of___awmod 0070  
                __size_of_pinMode 01B8                          __ptext10 111E  
                        __ptext11 115E                          __ptext12 1042  
                        __ptext13 0D76             analogRead@valueAnalog 000A  
                   __size_of_main 0120          __size_of_SerialPrintChar 000C  
            __size_of_SerialBegin 0070              __size_of_SerialPrint 002A  
           __CFG_CPUDIV$OSC1_PLL2 000000                       _numChannels 0801  
                   ?_digitalWrite 0001                 digitalWrite@state 0003  
                  String@original 000B                       _valueAnalog 0025  
                  ??_digitalWrite 0005                      ___aldiv@sign 000A  
                 digitalWrite@pin 0001          ?_setupAnalogDigitalInput 0001  
